{"ast":null,"code":"var _jsxFileName = \"/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/components/WeatherWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getWeatherIcon = (condition, isNight = false) => {\n  const baseUrl = '/images/weather-icons/';\n  switch (condition.toLowerCase()) {\n    case 'clear':\n      return `${baseUrl}${isNight ? 'clear-night.png' : 'clear-day.png'}`;\n    case 'clouds':\n      return `${baseUrl}cloudy.png`;\n    case 'rain':\n      return `${baseUrl}rain.png`;\n    case 'drizzle':\n      return `${baseUrl}drizzle.png`;\n    case 'thunderstorm':\n      return `${baseUrl}thunderstorm.png`;\n    case 'snow':\n      return `${baseUrl}snow.png`;\n    case 'mist':\n    case 'fog':\n      return `${baseUrl}fog.png`;\n    default:\n      return `${baseUrl}default.png`;\n  }\n};\nexport const WeatherWidget = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n        if (!apiKey) {\n          throw new Error('OpenWeather API key is not configured');\n        }\n        const city = 'Calgary'; // You can make this dynamic based on user location\n\n        // Fetch current weather\n        const currentWeatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n        if (!currentWeatherResponse.ok) {\n          throw new Error('Failed to fetch current weather data');\n        }\n        const currentWeatherData = await currentWeatherResponse.json();\n        const isNight = currentWeatherData.dt > currentWeatherData.sys.sunset || currentWeatherData.dt < currentWeatherData.sys.sunrise;\n        setWeather({\n          temperature: Math.round(currentWeatherData.main.temp),\n          condition: currentWeatherData.weather[0].main,\n          icon: getWeatherIcon(currentWeatherData.weather[0].main, isNight)\n        });\n\n        // Fetch 5-day forecast\n        const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n        if (!forecastResponse.ok) {\n          throw new Error('Failed to fetch forecast data');\n        }\n        const forecastData = await forecastResponse.json();\n\n        // Process forecast data to get one reading per day at noon\n        const dailyForecasts = forecastData.list.filter((item, index) => index % 8 === 0).map(item => ({\n          date: new Date(item.dt * 1000).toLocaleDateString('en-US', {\n            weekday: 'short'\n          }),\n          temperature: Math.round(item.main.temp),\n          condition: item.weather[0].main,\n          icon: getWeatherIcon(item.weather[0].main)\n        })).slice(0, 5);\n        setForecast(dailyForecasts);\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n        setError(error instanceof Error ? error.message : 'Failed to load weather data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          style: {\n            marginRight: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), \"Loading weather...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#991b1b'\n          },\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.875rem',\n            color: '#6b7280'\n          },\n          children: \"Please check your OpenWeather API key configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#991b1b'\n          },\n          children: \"Unable to load weather data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.875rem',\n            color: '#6b7280'\n          },\n          children: \"Please check your OpenWeather API key configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: weather.icon,\n        alt: weather.condition,\n        className: \"weather-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temperature\",\n          children: [weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"condition\",\n          children: weather.condition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: forecast.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forecast-date\",\n          children: day.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: day.icon,\n          alt: day.condition,\n          className: \"forecast-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forecast-temp\",\n          children: [day.temperature, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherWidget, \"PYhPtYZwfNSD29TrGz1uQ0B2Xpo=\");\n_c = WeatherWidget;\nvar _c;\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","getWeatherIcon","condition","isNight","baseUrl","toLowerCase","WeatherWidget","_s","weather","setWeather","forecast","setForecast","loading","setLoading","error","setError","fetchWeather","apiKey","process","env","REACT_APP_OPENWEATHER_API_KEY","Error","city","currentWeatherResponse","fetch","ok","currentWeatherData","json","dt","sys","sunset","sunrise","temperature","Math","round","main","temp","icon","forecastResponse","forecastData","dailyForecasts","list","filter","item","index","map","date","Date","toLocaleDateString","weekday","slice","console","message","className","children","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","fontSize","src","alt","day","_c","$RefreshReg$"],"sources":["/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/components/WeatherWidget.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport '../styles/main.css';\n\ninterface WeatherData {\n  temperature: number;\n  condition: string;\n  icon: string;\n}\n\ninterface ForecastData {\n  date: string;\n  temperature: number;\n  condition: string;\n  icon: string;\n}\n\nconst getWeatherIcon = (condition: string, isNight: boolean = false): string => {\n  const baseUrl = '/images/weather-icons/';\n  \n  switch (condition.toLowerCase()) {\n    case 'clear':\n      return `${baseUrl}${isNight ? 'clear-night.png' : 'clear-day.png'}`;\n    case 'clouds':\n      return `${baseUrl}cloudy.png`;\n    case 'rain':\n      return `${baseUrl}rain.png`;\n    case 'drizzle':\n      return `${baseUrl}drizzle.png`;\n    case 'thunderstorm':\n      return `${baseUrl}thunderstorm.png`;\n    case 'snow':\n      return `${baseUrl}snow.png`;\n    case 'mist':\n    case 'fog':\n      return `${baseUrl}fog.png`;\n    default:\n      return `${baseUrl}default.png`;\n  }\n};\n\nexport const WeatherWidget: React.FC = () => {\n  const [weather, setWeather] = useState<WeatherData | null>(null);\n  const [forecast, setForecast] = useState<ForecastData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n        \n        if (!apiKey) {\n          throw new Error('OpenWeather API key is not configured');\n        }\n\n        const city = 'Calgary'; // You can make this dynamic based on user location\n        \n        // Fetch current weather\n        const currentWeatherResponse = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n        );\n        \n        if (!currentWeatherResponse.ok) {\n          throw new Error('Failed to fetch current weather data');\n        }\n\n        const currentWeatherData = await currentWeatherResponse.json();\n        const isNight = currentWeatherData.dt > currentWeatherData.sys.sunset || currentWeatherData.dt < currentWeatherData.sys.sunrise;\n        \n        setWeather({\n          temperature: Math.round(currentWeatherData.main.temp),\n          condition: currentWeatherData.weather[0].main,\n          icon: getWeatherIcon(currentWeatherData.weather[0].main, isNight)\n        });\n\n        // Fetch 5-day forecast\n        const forecastResponse = await fetch(\n          `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`\n        );\n\n        if (!forecastResponse.ok) {\n          throw new Error('Failed to fetch forecast data');\n        }\n\n        const forecastData = await forecastResponse.json();\n        \n        // Process forecast data to get one reading per day at noon\n        const dailyForecasts = forecastData.list\n          .filter((item: any, index: number) => index % 8 === 0)\n          .map((item: any) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'short' }),\n            temperature: Math.round(item.main.temp),\n            condition: item.weather[0].main,\n            icon: getWeatherIcon(item.weather[0].main)\n          }))\n          .slice(0, 5);\n\n        setForecast(dailyForecasts);\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n        setError(error instanceof Error ? error.message : 'Failed to load weather data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeather();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"weather-widget\">\n        <div className=\"weather-info\">\n          <div className=\"spinner\" style={{ marginRight: '0.5rem' }}></div>\n          Loading weather...\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"weather-widget\">\n        <div className=\"weather-info\">\n          <p style={{ color: '#991b1b' }}>Error: {error}</p>\n          <p style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n            Please check your OpenWeather API key configuration\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!weather) {\n    return (\n      <div className=\"weather-widget\">\n        <div className=\"weather-info\">\n          <p style={{ color: '#991b1b' }}>Unable to load weather data</p>\n          <p style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n            Please check your OpenWeather API key configuration\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"weather-widget\">\n      <div className=\"weather-info\">\n        <img src={weather.icon} alt={weather.condition} className=\"weather-icon\" />\n        <div className=\"weather-details\">\n          <p className=\"temperature\">{weather.temperature}°C</p>\n          <p className=\"condition\">{weather.condition}</p>\n        </div>\n      </div>\n      <div className=\"forecast-container\">\n        {forecast.map((day, index) => (\n          <div key={index} className=\"forecast-day\">\n            <p className=\"forecast-date\">{day.date}</p>\n            <img src={day.icon} alt={day.condition} className=\"forecast-icon\" />\n            <p className=\"forecast-temp\">{day.temperature}°</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}