{"ast":null,"code":"var _jsxFileName = \"/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/pages/OutfitPlanner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OutfitPlanner = () => {\n  _s();\n  const navigate = useNavigate();\n  const [clothingItems, setClothingItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [savedOutfits, setSavedOutfits] = useState([]);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [outfitName, setOutfitName] = useState('');\n  const [outfitOccasion, setOutfitOccasion] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [scheduledOutfits, setScheduledOutfits] = useState([]);\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [selectedOutfitForSchedule, setSelectedOutfitForSchedule] = useState(null);\n  const [scheduleDate, setScheduleDate] = useState('');\n  const [isGoogleCalendarConnected, setIsGoogleCalendarConnected] = useState(false);\n  const [activeTab, setActiveTab] = useState('planner');\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [showCalendarView, setShowCalendarView] = useState(true);\n  const [weatherData, setWeatherData] = useState([]);\n  const [weatherLoading, setWeatherLoading] = useState(false);\n  const [weatherError, setWeatherError] = useState(null);\n  const categories = ['Jacket', 'Shirt', 'T-Shirt', 'Sweater', 'Dress', 'Skirt', 'Pants', 'Shorts', 'Jeans', 'Shoes', 'Accessories'];\n  const categoryOrder = ['Headwear', 'Jacket', 'Shirt', 'T-Shirt', 'Sweater', 'Dress', 'Skirt', 'Pants', 'Shorts', 'Jeans', 'Shoes', 'Accessories'];\n  useEffect(() => {\n    fetchClothingItems();\n    fetchSavedOutfits();\n    checkOutfitSchedulesTable();\n    fetchScheduledOutfits();\n    ensureUserSettingsTable();\n    checkGoogleCalendarConnection();\n  }, []);\n  useEffect(() => {\n    if (showCalendarView && calendarEvents.length > 0) {\n      fetchWeatherData();\n    }\n  }, [showCalendarView, calendarEvents]);\n  const fetchClothingItems = async () => {\n    try {\n      // Get the current user's ID\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      const {\n        data,\n        error\n      } = await supabase.from('clothing_items').select('*').eq('user_id', user.id);\n      if (error) throw error;\n      if (data) setClothingItems(data);\n    } catch (error) {\n      console.error('Error fetching clothing items:', error);\n    }\n  };\n  const fetchSavedOutfits = async () => {\n    try {\n      // Get the current user's ID\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      const {\n        data,\n        error\n      } = await supabase.from('outfits').select('*').eq('user_id', user.id).order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      if (data) {\n        // Fetch the actual clothing items for each outfit\n        const outfitsWithItems = await Promise.all(data.map(async outfit => {\n          const {\n            data: items\n          } = await supabase.from('clothing_items').select('*').in('id', outfit.items);\n          return {\n            ...outfit,\n            items: items || []\n          };\n        }));\n        setSavedOutfits(outfitsWithItems);\n      }\n    } catch (error) {\n      console.error('Error fetching saved outfits:', error);\n    }\n  };\n  const fetchScheduledOutfits = async () => {\n    try {\n      console.log('Fetching scheduled outfits...');\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // First check if the outfit_schedules table exists\n      const {\n        error: tableCheckError\n      } = await supabase.from('outfit_schedules').select('id').limit(1);\n      if (tableCheckError) {\n        console.log('Outfit schedules table may not exist yet:', tableCheckError);\n        return;\n      }\n\n      // Fetch scheduled outfits with outfit details\n      const {\n        data: schedules,\n        error: schedulesError\n      } = await supabase.from('outfit_schedules').select('*').eq('user_id', user.id).order('date', {\n        ascending: true\n      });\n      if (schedulesError) {\n        console.error('Error fetching scheduled outfits:', schedulesError);\n        return;\n      }\n      console.log('Fetched scheduled outfits:', schedules);\n      if (schedules && schedules.length > 0) {\n        // Fetch outfit details for each schedule\n        const outfitIds = schedules.map(schedule => schedule.outfit_id);\n        const {\n          data: outfits,\n          error: outfitsError\n        } = await supabase.from('outfits').select('*').in('id', outfitIds);\n        if (outfitsError) {\n          console.error('Error fetching outfit details:', outfitsError);\n          return;\n        }\n        console.log('Fetched outfit details:', outfits);\n\n        // Fetch clothing items for each outfit\n        const outfitItemsMap = new Map();\n        for (const outfit of outfits) {\n          // Parse outfit.items if it's a stringified array\n          let itemIds = [];\n          try {\n            itemIds = typeof outfit.items === 'string' ? JSON.parse(outfit.items) : outfit.items;\n          } catch (parseError) {\n            console.error(`Error parsing outfit.items for outfit ${outfit.id}:`, parseError);\n            continue;\n          }\n          const {\n            data: items,\n            error: itemsError\n          } = await supabase.from('clothing_items').select('*').in('id', itemIds);\n          if (itemsError) {\n            console.error(`Error fetching items for outfit ${outfit.id}:`, itemsError);\n            continue;\n          }\n          outfitItemsMap.set(outfit.id, items);\n        }\n        console.log('Fetched clothing items for outfits:', outfitItemsMap);\n\n        // Combine schedules with outfit details and items\n        const schedulesWithOutfits = schedules.map(schedule => {\n          const outfit = outfits.find(o => o.id === schedule.outfit_id);\n          if (outfit) {\n            const items = outfitItemsMap.get(outfit.id) || [];\n            return {\n              ...schedule,\n              outfit: {\n                ...outfit,\n                items\n              }\n            };\n          }\n          return schedule;\n        });\n        console.log('Combined schedules with outfits:', schedulesWithOutfits);\n        setScheduledOutfits(schedulesWithOutfits);\n      } else {\n        console.log('No scheduled outfits found');\n        setScheduledOutfits([]);\n      }\n    } catch (error) {\n      console.error('Error in fetchScheduledOutfits:', error);\n    }\n  };\n  const checkOutfitSchedulesTable = async () => {\n    try {\n      // Try to query the table to see if it exists\n      const {\n        error\n      } = await supabase.from('outfit_schedules').select('id').limit(1);\n      if (error) {\n        console.error('Error checking outfit_schedules table:', error);\n\n        // If the error indicates the table doesn't exist, create it\n        if (error.code === '42P01') {\n          // PostgreSQL error code for undefined_table\n          console.log('Creating outfit_schedules table...');\n          await createOutfitSchedulesTable();\n        }\n      } else {\n        console.log('outfit_schedules table exists');\n      }\n    } catch (error) {\n      console.error('Error in checkOutfitSchedulesTable:', error);\n    }\n  };\n  const createOutfitSchedulesTable = async () => {\n    try {\n      // This is a simplified approach - in a real app, you'd use migrations\n      // or have the table created by your backend\n      console.log('This feature requires the outfit_schedules table to be created in Supabase.');\n      console.log('Please run the SQL in the outfit_schedules.sql file in your Supabase SQL editor.');\n\n      // Show a more user-friendly message\n      alert('The outfit scheduling feature requires database setup. Please contact the administrator.');\n    } catch (error) {\n      console.error('Error creating outfit_schedules table:', error);\n    }\n  };\n  const handleRandomize = () => {\n    const newSelectedItems = [];\n    const usedCategories = new Set();\n\n    // Shuffle the clothing items\n    const shuffledItems = [...clothingItems].sort(() => Math.random() - 0.5);\n\n    // Select one item from each category\n    for (const item of shuffledItems) {\n      if (!usedCategories.has(item.category)) {\n        newSelectedItems.push(item);\n        usedCategories.add(item.category);\n      }\n    }\n    setSelectedItems(newSelectedItems);\n  };\n  const handleItemSelect = item => {\n    // Check if the item is already selected\n    const isAlreadySelected = selectedItems.some(i => i.id === item.id);\n    if (isAlreadySelected) {\n      // If already selected, remove it\n      setSelectedItems(selectedItems.filter(i => i.id !== item.id));\n    } else {\n      // If not selected, remove any existing item of the same category and add this one\n      const filteredItems = selectedItems.filter(i => i.category !== item.category);\n      setSelectedItems([...filteredItems, item]);\n    }\n  };\n  const handleItemUnselect = item => {\n    // Remove the item from selected items\n    setSelectedItems(selectedItems.filter(i => i.id !== item.id));\n  };\n  const handleSaveOutfit = async () => {\n    if (!outfitName || selectedItems.length === 0) {\n      alert('Please provide a name for the outfit and select at least one item');\n      return;\n    }\n    try {\n      // Get the current user's ID\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      console.log('Saving outfit with data:', {\n        user_id: user.id,\n        name: outfitName,\n        occasion: outfitOccasion || null,\n        items: selectedItems.map(item => item.id)\n      });\n      const {\n        data,\n        error\n      } = await supabase.from('outfits').insert([{\n        user_id: user.id,\n        name: outfitName,\n        occasion: outfitOccasion || null,\n        items: selectedItems.map(item => item.id)\n      }]).select();\n      if (error) {\n        console.error('Supabase error details:', error);\n        throw error;\n      }\n      console.log('Successfully saved outfit:', data);\n      setShowSaveModal(false);\n      setOutfitName('');\n      setOutfitOccasion('');\n      fetchSavedOutfits();\n    } catch (error) {\n      console.error('Error saving outfit:', error);\n      if (error instanceof Error) {\n        alert(`Error saving outfit: ${error.message}`);\n      } else {\n        alert('Error saving outfit. Please check the console for details.');\n      }\n    }\n  };\n  const handleDeleteOutfit = async outfitId => {\n    if (window.confirm('Are you sure you want to delete this outfit?')) {\n      try {\n        const {\n          error\n        } = await supabase.from('outfits').delete().eq('id', outfitId);\n        if (error) throw error;\n        fetchSavedOutfits();\n      } catch (error) {\n        console.error('Error deleting outfit:', error);\n        alert('Error deleting outfit');\n      }\n    }\n  };\n  const checkGoogleCalendarConnection = async () => {\n    try {\n      console.log('Checking Google Calendar connection...');\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // Check if user has Google Calendar connected\n      const {\n        data: settings,\n        error: settingsError\n      } = await supabase.from('user_settings').select('google_calendar_connected, google_access_token, google_token_expiry').eq('user_id', user.id).single();\n      if (settingsError) {\n        console.error('Error checking user settings:', settingsError);\n        return;\n      }\n      console.log('User settings for Google Calendar:', settings);\n\n      // Check if the token is expired\n      if (settings !== null && settings !== void 0 && settings.google_token_expiry && new Date(settings.google_token_expiry) < new Date()) {\n        console.log('Google token is expired');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // Check if we have a valid access token\n      if (!(settings !== null && settings !== void 0 && settings.google_access_token)) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // If we have a valid token and the connection is marked as connected, we're good\n      if (settings.google_calendar_connected) {\n        console.log('Google Calendar is connected');\n        setIsGoogleCalendarConnected(true);\n\n        // Fetch calendar events to make sure the connection is working\n        await fetchCalendarEvents();\n      } else {\n        console.log('Google Calendar is not connected');\n        setIsGoogleCalendarConnected(false);\n      }\n    } catch (error) {\n      console.error('Error checking Google Calendar connection:', error);\n      setIsGoogleCalendarConnected(false);\n    }\n  };\n  const connectGoogleCalendar = async () => {\n    try {\n      console.log('Starting Google Calendar connection...');\n\n      // Check if user is authenticated\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Load the Google API client\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n\n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise((resolve, reject) => {\n          window.gapi.load('client', async () => {\n            try {\n              await window.gapi.client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client. Please check your API credentials.');\n      }\n\n      // Use the new Google Identity Services for authentication\n      console.log('Signing in with Google...');\n      try {\n        // Create a token client\n        const tokenClient = window.google.accounts.oauth2.initTokenClient({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          scope: 'https://www.googleapis.com/auth/calendar',\n          callback: async response => {\n            if (response.error) {\n              console.error('Error getting token:', response.error);\n              throw new Error('Failed to get Google token');\n            }\n            console.log('Got Google token:', response);\n\n            // Save the access token to user settings\n            console.log('Saving access token to user settings...');\n            try {\n              // First check if the user settings record exists\n              const {\n                data: existingSettings,\n                error: checkError\n              } = await supabase.from('user_settings').select('*').eq('user_id', user.id).single();\n              if (checkError && checkError.code !== 'PGRST116') {\n                // PGRST116 is \"not found\" error\n                console.error('Error checking user settings:', checkError);\n                throw checkError;\n              }\n\n              // If the record doesn't exist, create it\n              if (!existingSettings) {\n                console.log('Creating new user settings record...');\n                const {\n                  error: createError\n                } = await supabase.from('user_settings').insert({\n                  user_id: user.id,\n                  google_calendar_connected: true,\n                  google_access_token: response.access_token,\n                  google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                });\n                if (createError) {\n                  console.error('Error creating user settings:', createError);\n                  throw createError;\n                }\n              } else {\n                // Update the existing record\n                console.log('Updating existing user settings record...');\n                try {\n                  const {\n                    data: updateData,\n                    error: updateError\n                  } = await supabase.from('user_settings').update({\n                    google_calendar_connected: true,\n                    google_access_token: response.access_token,\n                    google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                  }).eq('user_id', user.id).select();\n                  if (updateError) {\n                    console.error('Error updating user settings:', updateError);\n                    console.error('Error details:', {\n                      code: updateError.code,\n                      message: updateError.message,\n                      details: updateError.details,\n                      hint: updateError.hint\n                    });\n\n                    // If the error is about the column not existing, try to update without that field\n                    if (updateError.message && updateError.message.includes('google_token_expiry')) {\n                      console.log('Trying to update without the google_token_expiry field...');\n                      const {\n                        error: retryError\n                      } = await supabase.from('user_settings').update({\n                        google_calendar_connected: true,\n                        google_access_token: response.access_token\n                      }).eq('user_id', user.id);\n                      if (retryError) {\n                        console.error('Error updating user settings without expiry:', retryError);\n                        throw retryError;\n                      }\n                      console.log('Successfully updated user settings without expiry field');\n                    } else {\n                      throw updateError;\n                    }\n                  } else {\n                    console.log('Update successful:', updateData);\n                  }\n                } catch (error) {\n                  console.error('Error saving Google tokens:', error);\n                  alert('Failed to save Google Calendar connection. Please try again.');\n                  return;\n                }\n              }\n              console.log('Google Calendar connected successfully');\n              setIsGoogleCalendarConnected(true);\n\n              // Fetch calendar events\n              await fetchCalendarEvents();\n            } catch (error) {\n              console.error('Error saving Google tokens:', error);\n              alert('Failed to save Google Calendar connection. Please try again.');\n            }\n          },\n          error_callback: error => {\n            console.error('Error in token client:', error);\n            alert('Failed to authenticate with Google. Please try again.');\n          }\n        });\n\n        // Request a token\n        tokenClient.requestAccessToken();\n      } catch (error) {\n        console.error('Error signing in with Google:', error);\n        alert('Failed to sign in with Google. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error connecting to Google Calendar:', error);\n      alert('Failed to connect to Google Calendar. Please try again.');\n    }\n  };\n  const fetchCalendarEvents = async () => {\n    try {\n      console.log('Fetching calendar events...');\n\n      // Check if user is authenticated\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Get user settings\n      const {\n        data: settings,\n        error: settingsError\n      } = await supabase.from('user_settings').select('*').eq('user_id', user.id).single();\n      if (settingsError) {\n        console.error('Error fetching user settings:', settingsError);\n        throw settingsError;\n      }\n      if (!(settings !== null && settings !== void 0 && settings.google_access_token)) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // Check if token is expired\n      const tokenExpiry = new Date(settings.google_token_expiry);\n      if (tokenExpiry < new Date()) {\n        console.log('Google token expired, requesting new token...');\n        setIsGoogleCalendarConnected(false);\n        await connectGoogleCalendar();\n        return;\n      }\n\n      // Ensure Google API client is loaded\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n\n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise((resolve, reject) => {\n          window.gapi.load('client', async () => {\n            try {\n              await window.gapi.client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client');\n      }\n\n      // Set the access token\n      console.log('Setting Google API token...');\n      try {\n        window.gapi.client.setToken({\n          access_token: settings.google_access_token\n        });\n      } catch (error) {\n        console.error('Error setting Google API token:', error);\n        throw new Error('Failed to set Google API token');\n      }\n\n      // Get the current date and date 30 days from now\n      const now = new Date();\n      const thirtyDaysFromNow = new Date();\n      thirtyDaysFromNow.setDate(now.getDate() + 30);\n\n      // Format dates for the API\n      const timeMin = now.toISOString();\n      const timeMax = thirtyDaysFromNow.toISOString();\n\n      // Fetch events from Google Calendar\n      console.log('Fetching events from Google Calendar...');\n      try {\n        const response = await window.gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': timeMin,\n          'timeMax': timeMax,\n          'showDeleted': false,\n          'singleEvents': true,\n          'orderBy': 'startTime'\n        });\n        console.log('Google Calendar API response:', response);\n        if (response.result.items) {\n          const events = response.result.items;\n          console.log('Fetched calendar events:', events);\n\n          // Update scheduled outfits based on event descriptions\n          setCalendarEvents(events);\n          setIsGoogleCalendarConnected(true);\n        } else {\n          console.log('No events found in the specified time range');\n          setCalendarEvents([]);\n        }\n      } catch (error) {\n        console.error('Error fetching calendar events:', error);\n        throw new Error('Failed to fetch calendar events');\n      }\n    } catch (error) {\n      console.error('Error in fetchCalendarEvents:', error);\n      setIsGoogleCalendarConnected(false);\n      setCalendarEvents([]);\n    }\n  };\n  const handleScheduleOutfit = async () => {\n    if (!selectedOutfitForSchedule || !scheduleDate) {\n      alert('Please select an outfit and a date');\n      return;\n    }\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Create outfit schedule in Supabase\n      const {\n        data: scheduleData,\n        error: scheduleError\n      } = await supabase.from('outfit_schedules').insert([{\n        user_id: user.id,\n        outfit_id: selectedOutfitForSchedule.id,\n        date: scheduleDate\n      }]).select().single();\n      if (scheduleError) throw scheduleError;\n\n      // If Google Calendar is connected, create calendar event\n      // No need to create a Google Calendar event — Supabase only\n\n      setShowScheduleModal(false);\n      setSelectedOutfitForSchedule(null);\n      setScheduleDate('');\n      fetchScheduledOutfits();\n      if (isGoogleCalendarConnected) {\n        fetchCalendarEvents();\n      }\n    } catch (error) {\n      console.error('Error scheduling outfit:', error);\n      alert('Error scheduling outfit. Please try again.');\n    }\n  };\n  const handleDeleteSchedule = async scheduleId => {\n    if (window.confirm('Are you sure you want to remove this outfit from your schedule?')) {\n      try {\n        const {\n          error\n        } = await supabase.from('outfit_schedules').delete().eq('id', scheduleId);\n        if (error) throw error;\n        fetchScheduledOutfits();\n      } catch (error) {\n        console.error('Error deleting scheduled outfit:', error);\n        alert('Error removing outfit from schedule');\n      }\n    }\n  };\n  const getSortedItems = items => {\n    return [...items].sort((a, b) => {\n      const indexA = categoryOrder.indexOf(a.category);\n      const indexB = categoryOrder.indexOf(b.category);\n      return indexA - indexB;\n    });\n  };\n  const formatDate = dateString => {\n    // Create a date object in the user's timezone\n    const date = new Date(dateString + 'T00:00:00');\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const ensureUserSettingsTable = async () => {\n    try {\n      console.log('Ensuring user_settings table has correct structure...');\n\n      // Check if user is authenticated\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // Check if user_settings table exists\n      const {\n        error: tableCheckError\n      } = await supabase.from('user_settings').select('id').limit(1);\n      if (tableCheckError) {\n        console.error('Error checking user_settings table:', tableCheckError);\n        console.log('Please run the SQL script to create the user_settings table with the correct structure');\n        return;\n      }\n\n      // Check if user has a settings record\n      const {\n        data: settings,\n        error: settingsError\n      } = await supabase.from('user_settings').select('*').eq('user_id', user.id).single();\n      if (settingsError) {\n        console.log('User settings record not found, creating one...');\n        const {\n          error: createError\n        } = await supabase.from('user_settings').insert({\n          user_id: user.id,\n          google_calendar_connected: false,\n          google_access_token: null,\n          google_refresh_token: null,\n          google_token_expiry: null\n        });\n        if (createError) {\n          console.error('Error creating user settings:', createError);\n          return;\n        }\n        console.log('User settings record created');\n      } else {\n        console.log('User settings record exists:', settings);\n\n        // Check if the record has all required fields\n        const needsUpdate = !settings.google_token_expiry;\n        if (needsUpdate) {\n          console.log('Updating user settings record with missing fields...');\n          const {\n            error: updateError\n          } = await supabase.from('user_settings').update({\n            google_token_expiry: new Date(Date.now() + 3600000).toISOString() // 1 hour from now\n          }).eq('user_id', user.id);\n          if (updateError) {\n            console.error('Error updating user settings:', updateError);\n            console.log('Please run the SQL script to add the missing column to the user_settings table');\n            return;\n          }\n          console.log('User settings record updated with missing fields');\n        }\n      }\n    } catch (error) {\n      console.error('Error ensuring user_settings table:', error);\n    }\n  };\n  const fetchWeatherData = async () => {\n    try {\n      setWeatherLoading(true);\n      setWeatherError(null);\n      const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n      if (!apiKey) {\n        throw new Error('OpenWeather API key is not configured');\n      }\n      const city = 'Calgary'; // You can make this dynamic based on user location\n\n      // Fetch 5-day forecast (3-hour intervals)\n      const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n      if (!forecastResponse.ok) {\n        throw new Error('Failed to fetch forecast data');\n      }\n      const forecastData = await forecastResponse.json();\n      const seenDates = new Set();\n      const dailyForecasts = [];\n      const todayKey = new Date().toLocaleDateString('en-CA'); // today's date in local timezone\n\n      for (const item of forecastData.list) {\n        const localDate = new Date(item.dt * 1000);\n        const dateKey = localDate.toLocaleDateString('en-CA'); // \"YYYY-MM-DD\"\n\n        // Only process dates today or later\n        if (dateKey >= todayKey && !seenDates.has(dateKey)) {\n          seenDates.add(dateKey);\n\n          // Determine icon based on condition and time of day\n          const condition = item.weather[0].main.toLowerCase();\n          const description = item.weather[0].description.toLowerCase();\n          const hour = localDate.getHours();\n          let iconPath = '/images/weather-icons/clear-day.png'; // Default\n\n          if (condition.includes('clear')) {\n            iconPath = hour >= 6 && hour < 18 ? '/images/weather-icons/clear-day.png' : '/images/weather-icons/clear-night.png';\n          } else if (condition.includes('cloud')) {\n            iconPath = '/images/weather-icons/cloudy.png';\n          } else if (condition.includes('rain')) {\n            iconPath = description.includes('drizzle') ? '/images/weather-icons/drizzle.png' : '/images/weather-icons/rain.png';\n          } else if (condition.includes('snow')) {\n            iconPath = '/images/weather-icons/snow.png';\n          } else if (condition.includes('thunderstorm')) {\n            iconPath = '/images/weather-icons/thunderstorm.png';\n          } else if (condition.includes('mist') || condition.includes('fog') || condition.includes('haze')) {\n            iconPath = '/images/weather-icons/fog.png';\n          }\n          dailyForecasts.push({\n            date: dateKey,\n            temperature: Math.round(item.main.temp),\n            condition: item.weather[0].main,\n            icon: iconPath\n          });\n          if (dailyForecasts.length === 5) break; // Stop after 5 unique days\n        }\n      }\n      console.log('Fetched weather data (cleaned):', dailyForecasts);\n      setWeatherData(dailyForecasts);\n    } catch (error) {\n      console.error('Error fetching weather:', error);\n      setWeatherError(error instanceof Error ? error.message : 'Failed to load weather data');\n    } finally {\n      setWeatherLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dashboard-title\",\n          children: \"Outfit Planner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"btn btn-secondary\",\n        style: {\n          fontSize: \"16px\",\n          color: \"#fefefd\",\n          backgroundColor: \"#d07d6b\",\n          padding: \"10px 20px\",\n          textTransform: \"uppercase\",\n          fontWeight: \"bold\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          cursor: \"pointer\",\n          display: \"inline-block\",\n          textDecoration: \"none\",\n          transition: \"all 0.3s ease-in-out\"\n        },\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outfit-planner-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'planner' ? 'active' : ''}`,\n        onClick: () => setActiveTab('planner'),\n        style: {\n          fontSize: \"16px\",\n          color: activeTab === 'planner' ? \"#d07d6b\" : \"#3b3b3b\",\n          backgroundColor: \"transparent\",\n          padding: \"10px 20px\",\n          textTransform: \"uppercase\",\n          fontWeight: \"bold\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          borderBottom: activeTab === 'planner' ? \"2px solid #d07d6b\" : \"2px solid transparent\",\n          cursor: \"pointer\",\n          display: \"inline-block\",\n          textDecoration: \"none\",\n          transition: \"all 0.3s ease-in-out\"\n        },\n        children: \"Outfit Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'calendar' ? 'active' : ''}`,\n        onClick: () => setActiveTab('calendar'),\n        style: {\n          fontSize: \"16px\",\n          color: activeTab === 'calendar' ? \"#d07d6b\" : \"#3b3b3b\",\n          backgroundColor: \"transparent\",\n          padding: \"10px 20px\",\n          textTransform: \"uppercase\",\n          fontWeight: \"bold\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          borderBottom: activeTab === 'calendar' ? \"2px solid #d07d6b\" : \"2px solid transparent\",\n          cursor: \"pointer\",\n          display: \"inline-block\",\n          textDecoration: \"none\",\n          transition: \"all 0.3s ease-in-out\"\n        },\n        children: \"Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 7\n    }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outfit-calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Outfit Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-view-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-secondary ${showCalendarView ? 'active' : ''}`,\n            onClick: () => setShowCalendarView(true),\n            style: {\n              fontSize: \"16px\",\n              color: showCalendarView ? \"#fefefd\" : \"#6b7280\",\n              backgroundColor: showCalendarView ? \"#d07d6b\" : \"#f3f4f6\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\"\n            },\n            children: \"Calendar View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-secondary ${!showCalendarView ? 'active' : ''}`,\n            onClick: () => setShowCalendarView(false),\n            style: {\n              fontSize: \"16px\",\n              color: !showCalendarView ? \"#fefefd\" : \"#6b7280\",\n              backgroundColor: !showCalendarView ? \"#d07d6b\" : \"#f3f4f6\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\"\n            },\n            children: \"List View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 11\n      }, this), !showCalendarView ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scheduled-outfits-list\",\n        children: scheduledOutfits.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-items-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No outfits scheduled yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 17\n        }, this) : scheduledOutfits.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()).map(schedule => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scheduled-outfit-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scheduled-outfit-date\",\n            children: formatDate(schedule.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 23\n          }, this), schedule.outfit && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scheduled-outfit-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"outfit-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: schedule.outfit.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 29\n              }, this), schedule.outfit.occasion && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"outfit-occasion\",\n                children: schedule.outfit.occasion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"outfit-preview\",\n              children: getSortedItems(schedule.outfit.items).map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image_url,\n                alt: item.name || item.category,\n                className: \"outfit-item-image\",\n                style: {\n                  width: '40px',\n                  height: '40px',\n                  objectFit: 'cover',\n                  borderRadius: '4px',\n                  marginRight: '4px'\n                }\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 31\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scheduled-outfit-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteSchedule(schedule.id),\n              className: \"btn btn-secondary\",\n              style: {\n                fontSize: \"14px\",\n                color: \"#fefefd\",\n                backgroundColor: \"#ef4444\",\n                padding: \"8px 16px\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                border: \"none\",\n                cursor: \"pointer\"\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1172,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 23\n          }, this)]\n        }, schedule.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-view\",\n        children: !isGoogleCalendarConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-items-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please connect your Google Calendar to view your scheduled outfits in calendar view.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connectGoogleCalendar,\n            className: \"btn btn-secondary\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#fefefd\",\n              backgroundColor: \"#d07d6b\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\"\n            },\n            children: \"Connect Google Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 17\n        }, this) : calendarEvents.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-items-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No upcoming events found in your Google Calendar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Schedule an outfit from the Outfit Planner tab to see it here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1219,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 17\n        }, this) : (() => {\n          console.log('Rendering Kanban calendar view with events:', calendarEvents);\n\n          // Group events by date\n          const groupedEvents = calendarEvents.reduce((acc, event) => {\n            try {\n              // Validate the date string\n              const dateStr = event.start.dateTime;\n              if (!dateStr) {\n                console.warn('Event missing start date:', event);\n                return acc;\n              }\n\n              // Create a date object in the user's timezone\n              const date = new Date(dateStr);\n              if (isNaN(date.getTime())) {\n                console.warn('Invalid date value:', dateStr);\n                return acc;\n              }\n\n              // Use the local date string to ensure correct timezone handling\n              const dateKey = new Date(event.start.dateTime).toLocaleDateString('en-CA');\n              if (!acc[dateKey]) {\n                acc[dateKey] = [];\n              }\n              acc[dateKey].push(event);\n            } catch (error) {\n              console.error('Error processing event date:', error);\n            }\n            return acc;\n          }, {});\n\n          // Get the next 5 days starting from today\n          const today = new Date();\n          const nextFiveDays = Array.from({\n            length: 5\n          }, (_, i) => {\n            const localMidnight = new Date();\n            localMidnight.setHours(0, 0, 0, 0); // Reset to today at 00:00 local time\n            localMidnight.setDate(localMidnight.getDate() + i); // Add days\n            return localMidnight.toISOString().split('T')[0]; // Still returns YYYY-MM-DD\n          });\n\n          // Sort dates to ensure they're in chronological order\n          const sortedDates = nextFiveDays.sort((a, b) => {\n            try {\n              return new Date(a).getTime() - new Date(b).getTime();\n            } catch (error) {\n              console.error('Error sorting dates:', error);\n              return 0;\n            }\n          });\n          console.log('Grouped events by date:', groupedEvents);\n          console.log('Next five days:', sortedDates);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-calendar-view\",\n            children: sortedDates.map(date => {\n              const events = groupedEvents[date] || [];\n              console.log(`Rendering column for date ${date} with ${events.length} events`);\n\n              // Find the outfit scheduled for this date using the specified format\n              const scheduleMatch = scheduledOutfits.find(s => s.date === date);\n              const outfit = scheduleMatch === null || scheduleMatch === void 0 ? void 0 : scheduleMatch.outfit;\n              console.log(`Outfit for date ${date}:`, outfit);\n              console.log('Scheduled Outfits:', scheduledOutfits);\n              console.log('Checking for outfit on:', date);\n\n              // Create a date object for display\n              const displayDate = new Date(date);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"kanban-day-column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"kanban-day-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: displayDate.toLocaleDateString('en-US', {\n                      weekday: 'short',\n                      month: 'short',\n                      day: 'numeric'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1294,\n                    columnNumber: 29\n                  }, this), weatherData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"day-weather\",\n                    children: weatherLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"weather-loading\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"spinner\",\n                        style: {\n                          width: '16px',\n                          height: '16px',\n                          marginRight: '4px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1305,\n                        columnNumber: 37\n                      }, this), \"Loading...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1304,\n                      columnNumber: 35\n                    }, this) : weatherError ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"weather-error\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Weather unavailable\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1310,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1309,\n                      columnNumber: 35\n                    }, this) : (() => {\n                      const dayWeather = weatherData.find(w => w.date === date);\n                      if (dayWeather) {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"forecast-day\",\n                          style: {\n                            padding: '8px',\n                            backgroundColor: '#2462A2',\n                            color: 'white',\n                            borderRadius: '8px',\n                            textAlign: 'center',\n                            minWidth: '80px',\n                            transition: 'transform 0.2s ease'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"forecast-date\",\n                            style: {\n                              fontSize: '0.9rem',\n                              color: 'rgba(255, 255, 255, 0.9)',\n                              margin: '0 0 0.5rem 0',\n                              fontWeight: '500'\n                            },\n                            children: displayDate.toLocaleDateString('en-US', {\n                              weekday: 'short'\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1326,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: dayWeather.icon,\n                            alt: dayWeather.condition,\n                            className: \"forecast-icon\",\n                            style: {\n                              width: '36px',\n                              height: '36px',\n                              margin: '0.25rem 0',\n                              filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',\n                              transition: 'filter 0.3s ease',\n                              objectFit: 'contain',\n                              padding: '2px',\n                              background: 'transparent'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1334,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"forecast-temp\",\n                            style: {\n                              fontSize: '1.1rem',\n                              fontWeight: '600',\n                              color: 'white',\n                              margin: '0'\n                            },\n                            children: [dayWeather.temperature, \"\\xB0\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1349,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1317,\n                          columnNumber: 41\n                        }, this);\n                      }\n                      return null;\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1293,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `kanban-outfit-bar ${outfit ? 'has-outfit' : 'no-outfit'}`,\n                  children: outfit ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"outfit-bar-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"outfit-bar-title\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: outfit.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1370,\n                        columnNumber: 35\n                      }, this), outfit.occasion && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"outfit-occasion\",\n                        children: outfit.occasion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1371,\n                        columnNumber: 55\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1369,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"outfit-bar-preview\",\n                      children: getSortedItems(outfit.items).map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: item.image_url,\n                        alt: item.name || item.category,\n                        className: \"outfit-bar-item-image\"\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1375,\n                        columnNumber: 37\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1373,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1368,\n                    columnNumber: 31\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-outfit-message\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No outfit scheduled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1386,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1385,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1366,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"kanban-day-events\",\n                  children: events.map(event => {\n                    try {\n                      const startTime = new Date(event.start.dateTime);\n                      if (isNaN(startTime.getTime())) {\n                        console.warn('Invalid start time for event:', event);\n                        return null;\n                      }\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"kanban-event\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"event-time\",\n                          children: startTime.toLocaleTimeString([], {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1403,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"event-content\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                            children: event.summary\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1410,\n                            columnNumber: 39\n                          }, this), event.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"event-description\",\n                            children: event.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1412,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1409,\n                          columnNumber: 37\n                        }, this)]\n                      }, event.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1402,\n                        columnNumber: 35\n                      }, this);\n                    } catch (error) {\n                      console.error('Error rendering event:', error);\n                      return null;\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1392,\n                  columnNumber: 27\n                }, this)]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1276,\n            columnNumber: 19\n          }, this);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 9\n    }, this), activeTab === 'planner' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outfit-planner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outfit-preview-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Current Outfit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outfit-preview-grid\",\n          children: getSortedItems(selectedItems).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"outfit-preview-item\",\n            onClick: () => handleItemUnselect(item),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.name || item.category,\n              className: \"outfit-preview-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1446,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"outfit-preview-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name || item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1452,\n                columnNumber: 21\n              }, this), item.brand && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-brand\",\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1453,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1451,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outfit-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRandomize,\n            className: \"btn btn-primary\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#fefefd\",\n              backgroundColor: \"#d07d6b\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\"\n            },\n            children: \"Randomize Outfit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSaveModal(true),\n            disabled: selectedItems.length === 0,\n            className: \"btn btn-primary\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#fefefd\",\n              backgroundColor: \"#d07d6b\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\",\n              opacity: selectedItems.length === 0 ? 0.5 : 1\n            },\n            children: \"Save Outfit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clothing-selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Select Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-filters\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: \"form-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1508,\n              columnNumber: 17\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1510,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clothing-selection-grid\",\n          children: clothingItems.filter(item => !selectedCategory || item.category === selectedCategory).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `clothing-selection-item ${selectedItems.some(i => i.id === item.id) ? 'selected' : ''}`,\n            onClick: () => handleItemSelect(item),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.name || item.category,\n              className: \"clothing-selection-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1526,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clothing-selection-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name || item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1532,\n                columnNumber: 23\n              }, this), item.brand && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-brand\",\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1533,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1531,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1518,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1514,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-outfits-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Saved Outfits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1541,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saved-outfits-grid\",\n          children: savedOutfits.map(outfit => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saved-outfit-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: outfit.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1545,\n              columnNumber: 19\n            }, this), outfit.occasion ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"outfit-occasion\",\n              children: outfit.occasion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"outfit-occasion\",\n              style: {\n                visibility: \"hidden\"\n              },\n              children: \"No occasion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1549,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"saved-outfit-preview\",\n              children: getSortedItems(outfit.items).map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image_url,\n                alt: item.name || item.category,\n                className: \"saved-outfit-item-image\"\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1553,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1551,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"saved-outfit-actions\",\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectedItems(outfit.items);\n                  window.scrollTo({\n                    top: 0,\n                    behavior: 'smooth'\n                  });\n                },\n                className: \"btn btn-secondary\",\n                style: {\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#d07d6b\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\",\n                  width: \"100%\"\n                },\n                children: \"Load\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1567,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectedOutfitForSchedule(outfit);\n                  setShowScheduleModal(true);\n                },\n                className: \"btn btn-secondary\",\n                style: {\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#d07d6b\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\",\n                  width: \"100%\"\n                },\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1591,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteOutfit(outfit.id),\n                className: \"btn btn-danger\",\n                style: {\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#ef4444\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\",\n                  width: \"100%\"\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1615,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1561,\n              columnNumber: 19\n            }, this)]\n          }, outfit.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1544,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1542,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1540,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1435,\n      columnNumber: 9\n    }, this), showSaveModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Save Outfit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Outfit Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1650,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: outfitName,\n            onChange: e => setOutfitName(e.target.value),\n            placeholder: \"Enter a name for your outfit\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1651,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1649,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Occasion (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: outfitOccasion,\n            onChange: e => setOutfitOccasion(e.target.value),\n            placeholder: \"Enter an occasion\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1661,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowSaveModal(false);\n              setOutfitName('');\n              setOutfitOccasion('');\n            },\n            className: \"btn btn-secondary\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#fefefd\",\n              backgroundColor: \"#d07d6b\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveOutfit,\n            disabled: !outfitName,\n            className: \"btn btn-primary\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#fefefd\",\n              backgroundColor: \"#d07d6b\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\",\n              opacity: !outfitName ? 0.5 : 1\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1694,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1669,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1647,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1646,\n      columnNumber: 9\n    }, this), showScheduleModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Schedule Outfit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1725,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1727,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: scheduleDate,\n            onChange: e => setScheduleDate(e.target.value),\n            className: \"form-input\",\n            min: new Date().toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1728,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1726,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scheduled-outfit-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedOutfitForSchedule === null || selectedOutfitForSchedule === void 0 ? void 0 : selectedOutfitForSchedule.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1737,\n            columnNumber: 15\n          }, this), (selectedOutfitForSchedule === null || selectedOutfitForSchedule === void 0 ? void 0 : selectedOutfitForSchedule.occasion) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"outfit-occasion\",\n            children: selectedOutfitForSchedule.occasion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1739,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"outfit-preview-grid\",\n            children: (selectedOutfitForSchedule === null || selectedOutfitForSchedule === void 0 ? void 0 : selectedOutfitForSchedule.items) && getSortedItems(selectedOutfitForSchedule.items).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"outfit-preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image_url,\n                alt: item.name || item.category,\n                className: \"outfit-preview-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1744,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"outfit-preview-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.name || item.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1750,\n                  columnNumber: 23\n                }, this), item.brand && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"item-brand\",\n                  children: item.brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1751,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1749,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1743,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1741,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1736,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowScheduleModal(false);\n              setSelectedOutfitForSchedule(null);\n              setScheduleDate('');\n            },\n            className: \"btn btn-secondary\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#fefefd\",\n              backgroundColor: \"#d07d6b\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1758,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleScheduleOutfit,\n            disabled: !scheduleDate,\n            className: \"btn btn-primary\",\n            style: {\n              fontSize: \"16px\",\n              color: \"#fefefd\",\n              backgroundColor: \"#d07d6b\",\n              padding: \"10px 20px\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              textDecoration: \"none\",\n              transition: \"all 0.3s ease-in-out\",\n              opacity: !scheduleDate ? 0.5 : 1\n            },\n            children: \"Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1782,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1723,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1020,\n    columnNumber: 5\n  }, this);\n};\n_s(OutfitPlanner, \"N9YYCoc0Vq/gCpO7jzt9bdhDm/0=\", false, function () {\n  return [useNavigate];\n});\n_c = OutfitPlanner;\nexport default OutfitPlanner;\nvar _c;\n$RefreshReg$(_c, \"OutfitPlanner\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","OutfitPlanner","_s","navigate","clothingItems","setClothingItems","selectedItems","setSelectedItems","savedOutfits","setSavedOutfits","showSaveModal","setShowSaveModal","outfitName","setOutfitName","outfitOccasion","setOutfitOccasion","selectedCategory","setSelectedCategory","scheduledOutfits","setScheduledOutfits","showScheduleModal","setShowScheduleModal","selectedOutfitForSchedule","setSelectedOutfitForSchedule","scheduleDate","setScheduleDate","isGoogleCalendarConnected","setIsGoogleCalendarConnected","activeTab","setActiveTab","calendarEvents","setCalendarEvents","showCalendarView","setShowCalendarView","weatherData","setWeatherData","weatherLoading","setWeatherLoading","weatherError","setWeatherError","categories","categoryOrder","fetchClothingItems","fetchSavedOutfits","checkOutfitSchedulesTable","fetchScheduledOutfits","ensureUserSettingsTable","checkGoogleCalendarConnection","length","fetchWeatherData","data","user","auth","getUser","Error","error","from","select","eq","id","console","order","ascending","outfitsWithItems","Promise","all","map","outfit","items","in","log","tableCheckError","limit","schedules","schedulesError","outfitIds","schedule","outfit_id","outfits","outfitsError","outfitItemsMap","Map","itemIds","JSON","parse","parseError","itemsError","set","schedulesWithOutfits","find","o","get","code","createOutfitSchedulesTable","alert","handleRandomize","newSelectedItems","usedCategories","Set","shuffledItems","sort","Math","random","item","has","category","push","add","handleItemSelect","isAlreadySelected","some","i","filter","filteredItems","handleItemUnselect","handleSaveOutfit","user_id","name","occasion","insert","message","handleDeleteOutfit","outfitId","window","confirm","delete","settings","settingsError","single","google_token_expiry","Date","google_access_token","google_calendar_connected","fetchCalendarEvents","connectGoogleCalendar","gapi","resolve","reject","script","document","createElement","src","onload","onerror","body","appendChild","load","client","init","apiKey","process","env","REACT_APP_GOOGLE_API_KEY","discoveryDocs","tokenClient","google","accounts","oauth2","initTokenClient","client_id","REACT_APP_GOOGLE_CLIENT_ID","scope","callback","response","existingSettings","checkError","createError","access_token","now","expires_in","toISOString","updateData","updateError","update","details","hint","includes","retryError","error_callback","requestAccessToken","tokenExpiry","setToken","thirtyDaysFromNow","setDate","getDate","timeMin","timeMax","calendar","events","list","result","handleScheduleOutfit","scheduleData","scheduleError","date","handleDeleteSchedule","scheduleId","getSortedItems","a","b","indexA","indexOf","indexB","formatDate","dateString","toLocaleDateString","weekday","year","month","day","google_refresh_token","needsUpdate","REACT_APP_OPENWEATHER_API_KEY","city","forecastResponse","fetch","ok","forecastData","json","seenDates","dailyForecasts","todayKey","localDate","dt","dateKey","condition","weather","main","toLowerCase","description","hour","getHours","iconPath","temperature","round","temp","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","fontSize","color","backgroundColor","padding","textTransform","fontWeight","borderRadius","border","cursor","display","textDecoration","transition","borderBottom","getTime","image_url","alt","width","height","objectFit","marginRight","groupedEvents","reduce","acc","event","dateStr","start","dateTime","warn","isNaN","today","nextFiveDays","Array","_","localMidnight","setHours","split","sortedDates","scheduleMatch","s","displayDate","dayWeather","w","textAlign","minWidth","margin","background","startTime","toLocaleTimeString","minute","summary","brand","disabled","opacity","value","onChange","e","target","visibility","flexDirection","gap","scrollTo","top","behavior","type","placeholder","min","_c","$RefreshReg$"],"sources":["/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/pages/OutfitPlanner.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/main.css';\n\ninterface ClothingItem {\n  id: string;\n  image_url: string;\n  name: string | null;\n  brand: string | null;\n  category: string;\n  color: string;\n  occasion: string;\n}\n\ninterface Outfit {\n  id: string;\n  name: string;\n  occasion: string | null;\n  items: ClothingItem[];\n  created_at: string;\n}\n\ninterface OutfitSchedule {\n  id: string;\n  outfit_id: string;\n  date: string;\n  user_id: string;\n  created_at: string;\n  outfit?: Outfit;\n  google_event_id?: string;\n}\n\ninterface GoogleCalendarEvent {\n  id: string;\n  summary: string;\n  description?: string;\n  start: {\n    dateTime: string;\n    timeZone: string;\n  };\n  end: {\n    dateTime: string;\n    timeZone: string;\n  };\n}\n\ninterface WeatherData {\n  date: string;\n  temperature: number;\n  condition: string;\n  icon: string;\n}\n\nconst OutfitPlanner: React.FC = () => {\n  const navigate = useNavigate();\n  const [clothingItems, setClothingItems] = useState<ClothingItem[]>([]);\n  const [selectedItems, setSelectedItems] = useState<ClothingItem[]>([]);\n  const [savedOutfits, setSavedOutfits] = useState<Outfit[]>([]);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [outfitName, setOutfitName] = useState('');\n  const [outfitOccasion, setOutfitOccasion] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [scheduledOutfits, setScheduledOutfits] = useState<OutfitSchedule[]>([]);\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [selectedOutfitForSchedule, setSelectedOutfitForSchedule] = useState<Outfit | null>(null);\n  const [scheduleDate, setScheduleDate] = useState('');\n  const [isGoogleCalendarConnected, setIsGoogleCalendarConnected] = useState(false);\n  const [activeTab, setActiveTab] = useState<'planner' | 'calendar'>('planner');\n  const [calendarEvents, setCalendarEvents] = useState<GoogleCalendarEvent[]>([]);\n  const [showCalendarView, setShowCalendarView] = useState(true);\n  const [weatherData, setWeatherData] = useState<WeatherData[]>([]);\n  const [weatherLoading, setWeatherLoading] = useState(false);\n  const [weatherError, setWeatherError] = useState<string | null>(null);\n\n  const categories = [\n    'Jacket',\n    'Shirt',\n    'T-Shirt',\n    'Sweater',\n    'Dress',\n    'Skirt',\n    'Pants',\n    'Shorts',\n    'Jeans',\n    'Shoes',\n    'Accessories',\n  ];\n\n  const categoryOrder = [\n    'Headwear',\n    'Jacket',\n    'Shirt',\n    'T-Shirt',\n    'Sweater',\n    'Dress',\n    'Skirt',\n    'Pants',\n    'Shorts',\n    'Jeans',\n    'Shoes',\n    'Accessories'\n  ];\n\n  useEffect(() => {\n    fetchClothingItems();\n    fetchSavedOutfits();\n    checkOutfitSchedulesTable();\n    fetchScheduledOutfits();\n    ensureUserSettingsTable();\n    checkGoogleCalendarConnection();\n  }, []);\n\n  useEffect(() => {\n    if (showCalendarView && calendarEvents.length > 0) {\n      fetchWeatherData();\n    }\n  }, [showCalendarView, calendarEvents]);\n\n  const fetchClothingItems = async () => {\n    try {\n      // Get the current user's ID\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      const { data, error } = await supabase\n        .from('clothing_items')\n        .select('*')\n        .eq('user_id', user.id);\n\n      if (error) throw error;\n      if (data) setClothingItems(data);\n    } catch (error) {\n      console.error('Error fetching clothing items:', error);\n    }\n  };\n\n  const fetchSavedOutfits = async () => {\n    try {\n      // Get the current user's ID\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      const { data, error } = await supabase\n        .from('outfits')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      if (data) {\n        // Fetch the actual clothing items for each outfit\n        const outfitsWithItems = await Promise.all(\n          data.map(async (outfit) => {\n            const { data: items } = await supabase\n              .from('clothing_items')\n              .select('*')\n              .in('id', outfit.items);\n            return {\n              ...outfit,\n              items: items || [],\n            };\n          })\n        );\n        setSavedOutfits(outfitsWithItems);\n      }\n    } catch (error) {\n      console.error('Error fetching saved outfits:', error);\n    }\n  };\n\n  const fetchScheduledOutfits = async () => {\n    try {\n      console.log('Fetching scheduled outfits...');\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n  \n      // First check if the outfit_schedules table exists\n      const { error: tableCheckError } = await supabase\n        .from('outfit_schedules')\n        .select('id')\n        .limit(1);\n  \n      if (tableCheckError) {\n        console.log('Outfit schedules table may not exist yet:', tableCheckError);\n        return;\n      }\n  \n      // Fetch scheduled outfits with outfit details\n      const { data: schedules, error: schedulesError } = await supabase\n        .from('outfit_schedules')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('date', { ascending: true });\n  \n      if (schedulesError) {\n        console.error('Error fetching scheduled outfits:', schedulesError);\n        return;\n      }\n  \n      console.log('Fetched scheduled outfits:', schedules);\n  \n      if (schedules && schedules.length > 0) {\n        // Fetch outfit details for each schedule\n        const outfitIds = schedules.map(schedule => schedule.outfit_id);\n        const { data: outfits, error: outfitsError } = await supabase\n          .from('outfits')\n          .select('*')\n          .in('id', outfitIds);\n  \n        if (outfitsError) {\n          console.error('Error fetching outfit details:', outfitsError);\n          return;\n        }\n  \n        console.log('Fetched outfit details:', outfits);\n  \n        // Fetch clothing items for each outfit\n        const outfitItemsMap = new Map();\n        for (const outfit of outfits) {\n          // Parse outfit.items if it's a stringified array\n          let itemIds: string[] = [];\n          try {\n            itemIds = typeof outfit.items === 'string'\n              ? JSON.parse(outfit.items)\n              : outfit.items;\n          } catch (parseError) {\n            console.error(`Error parsing outfit.items for outfit ${outfit.id}:`, parseError);\n            continue;\n          }\n  \n          const { data: items, error: itemsError } = await supabase\n            .from('clothing_items')\n            .select('*')\n            .in('id', itemIds);\n  \n          if (itemsError) {\n            console.error(`Error fetching items for outfit ${outfit.id}:`, itemsError);\n            continue;\n          }\n  \n          outfitItemsMap.set(outfit.id, items);\n        }\n  \n        console.log('Fetched clothing items for outfits:', outfitItemsMap);\n  \n        // Combine schedules with outfit details and items\n        const schedulesWithOutfits = schedules.map(schedule => {\n          const outfit = outfits.find(o => o.id === schedule.outfit_id);\n          if (outfit) {\n            const items = outfitItemsMap.get(outfit.id) || [];\n            return {\n              ...schedule,\n              outfit: {\n                ...outfit,\n                items\n              }\n            };\n          }\n          return schedule;\n        });\n  \n        console.log('Combined schedules with outfits:', schedulesWithOutfits);\n        setScheduledOutfits(schedulesWithOutfits);\n      } else {\n        console.log('No scheduled outfits found');\n        setScheduledOutfits([]);\n      }\n    } catch (error) {\n      console.error('Error in fetchScheduledOutfits:', error);\n    }\n  };\n\n  const checkOutfitSchedulesTable = async () => {\n    try {\n      // Try to query the table to see if it exists\n      const { error } = await supabase\n        .from('outfit_schedules')\n        .select('id')\n        .limit(1);\n      \n      if (error) {\n        console.error('Error checking outfit_schedules table:', error);\n        \n        // If the error indicates the table doesn't exist, create it\n        if (error.code === '42P01') { // PostgreSQL error code for undefined_table\n          console.log('Creating outfit_schedules table...');\n          await createOutfitSchedulesTable();\n        }\n      } else {\n        console.log('outfit_schedules table exists');\n      }\n    } catch (error) {\n      console.error('Error in checkOutfitSchedulesTable:', error);\n    }\n  };\n\n  const createOutfitSchedulesTable = async () => {\n    try {\n      // This is a simplified approach - in a real app, you'd use migrations\n      // or have the table created by your backend\n      console.log('This feature requires the outfit_schedules table to be created in Supabase.');\n      console.log('Please run the SQL in the outfit_schedules.sql file in your Supabase SQL editor.');\n      \n      // Show a more user-friendly message\n      alert('The outfit scheduling feature requires database setup. Please contact the administrator.');\n    } catch (error) {\n      console.error('Error creating outfit_schedules table:', error);\n    }\n  };\n\n  const handleRandomize = () => {\n    const newSelectedItems: ClothingItem[] = [];\n    const usedCategories = new Set<string>();\n\n    // Shuffle the clothing items\n    const shuffledItems = [...clothingItems].sort(() => Math.random() - 0.5);\n\n    // Select one item from each category\n    for (const item of shuffledItems) {\n      if (!usedCategories.has(item.category)) {\n        newSelectedItems.push(item);\n        usedCategories.add(item.category);\n      }\n    }\n\n    setSelectedItems(newSelectedItems);\n  };\n\n  const handleItemSelect = (item: ClothingItem) => {\n    // Check if the item is already selected\n    const isAlreadySelected = selectedItems.some(i => i.id === item.id);\n    \n    if (isAlreadySelected) {\n      // If already selected, remove it\n      setSelectedItems(selectedItems.filter(i => i.id !== item.id));\n    } else {\n      // If not selected, remove any existing item of the same category and add this one\n      const filteredItems = selectedItems.filter(i => i.category !== item.category);\n      setSelectedItems([...filteredItems, item]);\n    }\n  };\n\n  const handleItemUnselect = (item: ClothingItem) => {\n    // Remove the item from selected items\n    setSelectedItems(selectedItems.filter(i => i.id !== item.id));\n  };\n\n  const handleSaveOutfit = async () => {\n    if (!outfitName || selectedItems.length === 0) {\n      alert('Please provide a name for the outfit and select at least one item');\n      return;\n    }\n\n    try {\n      // Get the current user's ID\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      console.log('Saving outfit with data:', {\n        user_id: user.id,\n        name: outfitName,\n        occasion: outfitOccasion || null,\n        items: selectedItems.map(item => item.id)\n      });\n\n      const { data, error } = await supabase\n        .from('outfits')\n        .insert([\n          {\n            user_id: user.id,\n            name: outfitName,\n            occasion: outfitOccasion || null,\n            items: selectedItems.map(item => item.id),\n          },\n        ])\n        .select();\n\n      if (error) {\n        console.error('Supabase error details:', error);\n        throw error;\n      }\n\n      console.log('Successfully saved outfit:', data);\n\n      setShowSaveModal(false);\n      setOutfitName('');\n      setOutfitOccasion('');\n      fetchSavedOutfits();\n    } catch (error) {\n      console.error('Error saving outfit:', error);\n      if (error instanceof Error) {\n        alert(`Error saving outfit: ${error.message}`);\n      } else {\n        alert('Error saving outfit. Please check the console for details.');\n      }\n    }\n  };\n\n  const handleDeleteOutfit = async (outfitId: string) => {\n    if (window.confirm('Are you sure you want to delete this outfit?')) {\n      try {\n        const { error } = await supabase\n          .from('outfits')\n          .delete()\n          .eq('id', outfitId);\n\n        if (error) throw error;\n        fetchSavedOutfits();\n      } catch (error) {\n        console.error('Error deleting outfit:', error);\n        alert('Error deleting outfit');\n      }\n    }\n  };\n\n  const checkGoogleCalendarConnection = async () => {\n    try {\n      console.log('Checking Google Calendar connection...');\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // Check if user has Google Calendar connected\n      const { data: settings, error: settingsError } = await supabase\n        .from('user_settings')\n        .select('google_calendar_connected, google_access_token, google_token_expiry')\n        .eq('user_id', user.id)\n        .single();\n\n      if (settingsError) {\n        console.error('Error checking user settings:', settingsError);\n        return;\n      }\n\n      console.log('User settings for Google Calendar:', settings);\n\n      // Check if the token is expired\n      if (settings?.google_token_expiry && new Date(settings.google_token_expiry) < new Date()) {\n        console.log('Google token is expired');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // Check if we have a valid access token\n      if (!settings?.google_access_token) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // If we have a valid token and the connection is marked as connected, we're good\n      if (settings.google_calendar_connected) {\n        console.log('Google Calendar is connected');\n        setIsGoogleCalendarConnected(true);\n        \n        // Fetch calendar events to make sure the connection is working\n        await fetchCalendarEvents();\n      } else {\n        console.log('Google Calendar is not connected');\n        setIsGoogleCalendarConnected(false);\n      }\n    } catch (error) {\n      console.error('Error checking Google Calendar connection:', error);\n      setIsGoogleCalendarConnected(false);\n    }\n  };\n\n  const connectGoogleCalendar = async () => {\n    try {\n      console.log('Starting Google Calendar connection...');\n      \n      // Check if user is authenticated\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      \n      // Load the Google API client\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n      \n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise<void>((resolve, reject) => {\n          (window.gapi as any).load('client', async () => {\n            try {\n              await (window.gapi as any).client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client. Please check your API credentials.');\n      }\n      \n      // Use the new Google Identity Services for authentication\n      console.log('Signing in with Google...');\n      try {\n        // Create a token client\n        const tokenClient = (window.google as any).accounts.oauth2.initTokenClient({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          scope: 'https://www.googleapis.com/auth/calendar',\n          callback: async (response: any) => {\n            if (response.error) {\n              console.error('Error getting token:', response.error);\n              throw new Error('Failed to get Google token');\n            }\n            \n            console.log('Got Google token:', response);\n            \n            // Save the access token to user settings\n            console.log('Saving access token to user settings...');\n            try {\n              // First check if the user settings record exists\n              const { data: existingSettings, error: checkError } = await supabase\n                .from('user_settings')\n                .select('*')\n                .eq('user_id', user.id)\n                .single();\n              \n              if (checkError && checkError.code !== 'PGRST116') { // PGRST116 is \"not found\" error\n                console.error('Error checking user settings:', checkError);\n                throw checkError;\n              }\n              \n              // If the record doesn't exist, create it\n              if (!existingSettings) {\n                console.log('Creating new user settings record...');\n                const { error: createError } = await supabase\n                  .from('user_settings')\n                  .insert({\n                    user_id: user.id,\n                    google_calendar_connected: true,\n                    google_access_token: response.access_token,\n                    google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                  });\n                \n                if (createError) {\n                  console.error('Error creating user settings:', createError);\n                  throw createError;\n                }\n              } else {\n                // Update the existing record\n                console.log('Updating existing user settings record...');\n                try {\n                  const { data: updateData, error: updateError } = await supabase\n                    .from('user_settings')\n                    .update({\n                      google_calendar_connected: true,\n                      google_access_token: response.access_token,\n                      google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                    })\n                    .eq('user_id', user.id)\n                    .select();\n                  \n                  if (updateError) {\n                    console.error('Error updating user settings:', updateError);\n                    console.error('Error details:', {\n                      code: updateError.code,\n                      message: updateError.message,\n                      details: updateError.details,\n                      hint: updateError.hint\n                    });\n                    \n                    // If the error is about the column not existing, try to update without that field\n                    if (updateError.message && updateError.message.includes('google_token_expiry')) {\n                      console.log('Trying to update without the google_token_expiry field...');\n                      const { error: retryError } = await supabase\n                        .from('user_settings')\n                        .update({\n                          google_calendar_connected: true,\n                          google_access_token: response.access_token\n                        })\n                        .eq('user_id', user.id);\n                      \n                      if (retryError) {\n                        console.error('Error updating user settings without expiry:', retryError);\n                        throw retryError;\n                      }\n                      \n                      console.log('Successfully updated user settings without expiry field');\n                    } else {\n                      throw updateError;\n                    }\n                  } else {\n                    console.log('Update successful:', updateData);\n                  }\n                } catch (error) {\n                  console.error('Error saving Google tokens:', error);\n                  alert('Failed to save Google Calendar connection. Please try again.');\n                  return;\n                }\n              }\n              \n              console.log('Google Calendar connected successfully');\n              setIsGoogleCalendarConnected(true);\n              \n              // Fetch calendar events\n              await fetchCalendarEvents();\n            } catch (error) {\n              console.error('Error saving Google tokens:', error);\n              alert('Failed to save Google Calendar connection. Please try again.');\n            }\n          },\n          error_callback: (error: any) => {\n            console.error('Error in token client:', error);\n            alert('Failed to authenticate with Google. Please try again.');\n          }\n        });\n        \n        // Request a token\n        tokenClient.requestAccessToken();\n      } catch (error) {\n        console.error('Error signing in with Google:', error);\n        alert('Failed to sign in with Google. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error connecting to Google Calendar:', error);\n      alert('Failed to connect to Google Calendar. Please try again.');\n    }\n  };\n\n  const fetchCalendarEvents = async () => {\n    try {\n      console.log('Fetching calendar events...');\n      \n      // Check if user is authenticated\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      \n      // Get user settings\n      const { data: settings, error: settingsError } = await supabase\n        .from('user_settings')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n      \n      if (settingsError) {\n        console.error('Error fetching user settings:', settingsError);\n        throw settingsError;\n      }\n      \n      if (!settings?.google_access_token) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n      \n      // Check if token is expired\n      const tokenExpiry = new Date(settings.google_token_expiry);\n      if (tokenExpiry < new Date()) {\n        console.log('Google token expired, requesting new token...');\n        setIsGoogleCalendarConnected(false);\n        await connectGoogleCalendar();\n        return;\n      }\n      \n      // Ensure Google API client is loaded\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n      \n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise<void>((resolve, reject) => {\n          (window.gapi as any).load('client', async () => {\n            try {\n              await (window.gapi as any).client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client');\n      }\n      \n      // Set the access token\n      console.log('Setting Google API token...');\n      try {\n        (window.gapi as any).client.setToken({\n          access_token: settings.google_access_token\n        });\n      } catch (error) {\n        console.error('Error setting Google API token:', error);\n        throw new Error('Failed to set Google API token');\n      }\n      \n      // Get the current date and date 30 days from now\n      const now = new Date();\n      const thirtyDaysFromNow = new Date();\n      thirtyDaysFromNow.setDate(now.getDate() + 30);\n      \n      // Format dates for the API\n      const timeMin = now.toISOString();\n      const timeMax = thirtyDaysFromNow.toISOString();\n      \n      // Fetch events from Google Calendar\n      console.log('Fetching events from Google Calendar...');\n      try {\n        const response = await (window.gapi as any).client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': timeMin,\n          'timeMax': timeMax,\n          'showDeleted': false,\n          'singleEvents': true,\n          'orderBy': 'startTime'\n        });\n        \n        console.log('Google Calendar API response:', response);\n        \n        if (response.result.items) {\n          const events = response.result.items;\n          console.log('Fetched calendar events:', events);\n          \n          // Update scheduled outfits based on event descriptions\n          setCalendarEvents(events);\n          setIsGoogleCalendarConnected(true);\n        } else {\n          console.log('No events found in the specified time range');\n          setCalendarEvents([]);\n        }\n      } catch (error) {\n        console.error('Error fetching calendar events:', error);\n        throw new Error('Failed to fetch calendar events');\n      }\n    } catch (error) {\n      console.error('Error in fetchCalendarEvents:', error);\n      setIsGoogleCalendarConnected(false);\n      setCalendarEvents([]);\n    }\n  };\n\n  const handleScheduleOutfit = async () => {\n    if (!selectedOutfitForSchedule || !scheduleDate) {\n      alert('Please select an outfit and a date');\n      return;\n    }\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Create outfit schedule in Supabase\n      const { data: scheduleData, error: scheduleError } = await supabase\n        .from('outfit_schedules')\n        .insert([\n          {\n            user_id: user.id,\n            outfit_id: selectedOutfitForSchedule.id,\n            date: scheduleDate,\n          },\n        ])\n        .select()\n        .single();\n\n      if (scheduleError) throw scheduleError;\n\n      // If Google Calendar is connected, create calendar event\n      // No need to create a Google Calendar event — Supabase only\n\n      setShowScheduleModal(false);\n      setSelectedOutfitForSchedule(null);\n      setScheduleDate('');\n      fetchScheduledOutfits();\n      if (isGoogleCalendarConnected) {\n        fetchCalendarEvents();\n      }\n    } catch (error) {\n      console.error('Error scheduling outfit:', error);\n      alert('Error scheduling outfit. Please try again.');\n    }\n  };\n\n  const handleDeleteSchedule = async (scheduleId: string) => {\n    if (window.confirm('Are you sure you want to remove this outfit from your schedule?')) {\n      try {\n        const { error } = await supabase\n          .from('outfit_schedules')\n          .delete()\n          .eq('id', scheduleId);\n\n        if (error) throw error;\n        fetchScheduledOutfits();\n      } catch (error) {\n        console.error('Error deleting scheduled outfit:', error);\n        alert('Error removing outfit from schedule');\n      }\n    }\n  };\n\n  const getSortedItems = (items: ClothingItem[]) => {\n    return [...items].sort((a, b) => {\n      const indexA = categoryOrder.indexOf(a.category);\n      const indexB = categoryOrder.indexOf(b.category);\n      return indexA - indexB;\n    });\n  };\n\n  const formatDate = (dateString: string) => {\n    // Create a date object in the user's timezone\n    const date = new Date(dateString + 'T00:00:00');\n    return date.toLocaleDateString('en-US', { \n      weekday: 'long', \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n  };\n\n  const ensureUserSettingsTable = async () => {\n    try {\n      console.log('Ensuring user_settings table has correct structure...');\n      \n      // Check if user is authenticated\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n      \n      // Check if user_settings table exists\n      const { error: tableCheckError } = await supabase\n        .from('user_settings')\n        .select('id')\n        .limit(1);\n      \n      if (tableCheckError) {\n        console.error('Error checking user_settings table:', tableCheckError);\n        console.log('Please run the SQL script to create the user_settings table with the correct structure');\n        return;\n      }\n      \n      // Check if user has a settings record\n      const { data: settings, error: settingsError } = await supabase\n        .from('user_settings')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n      \n      if (settingsError) {\n        console.log('User settings record not found, creating one...');\n        const { error: createError } = await supabase\n          .from('user_settings')\n          .insert({\n            user_id: user.id,\n            google_calendar_connected: false,\n            google_access_token: null,\n            google_refresh_token: null,\n            google_token_expiry: null\n          });\n          \n        if (createError) {\n          console.error('Error creating user settings:', createError);\n          return;\n        }\n        \n        console.log('User settings record created');\n      } else {\n        console.log('User settings record exists:', settings);\n        \n        // Check if the record has all required fields\n        const needsUpdate = !settings.google_token_expiry;\n        \n        if (needsUpdate) {\n          console.log('Updating user settings record with missing fields...');\n          const { error: updateError } = await supabase\n            .from('user_settings')\n            .update({\n              google_token_expiry: new Date(Date.now() + 3600000).toISOString() // 1 hour from now\n            })\n            .eq('user_id', user.id);\n            \n          if (updateError) {\n            console.error('Error updating user settings:', updateError);\n            console.log('Please run the SQL script to add the missing column to the user_settings table');\n            return;\n          }\n          \n          console.log('User settings record updated with missing fields');\n        }\n      }\n    } catch (error) {\n      console.error('Error ensuring user_settings table:', error);\n    }\n  };\n\n  const fetchWeatherData = async () => {\n    try {\n      setWeatherLoading(true);\n      setWeatherError(null);\n  \n      const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n  \n      if (!apiKey) {\n        throw new Error('OpenWeather API key is not configured');\n      }\n  \n      const city = 'Calgary'; // You can make this dynamic based on user location\n  \n      // Fetch 5-day forecast (3-hour intervals)\n      const forecastResponse = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`\n      );\n  \n      if (!forecastResponse.ok) {\n        throw new Error('Failed to fetch forecast data');\n      }\n  \n      const forecastData = await forecastResponse.json();\n  \n      const seenDates = new Set();\n      const dailyForecasts = [];\n      const todayKey = new Date().toLocaleDateString('en-CA'); // today's date in local timezone\n  \n      for (const item of forecastData.list) {\n        const localDate = new Date(item.dt * 1000);\n        const dateKey = localDate.toLocaleDateString('en-CA'); // \"YYYY-MM-DD\"\n  \n        // Only process dates today or later\n        if (dateKey >= todayKey && !seenDates.has(dateKey)) {\n          seenDates.add(dateKey);\n  \n          // Determine icon based on condition and time of day\n          const condition = item.weather[0].main.toLowerCase();\n          const description = item.weather[0].description.toLowerCase();\n          const hour = localDate.getHours();\n  \n          let iconPath = '/images/weather-icons/clear-day.png'; // Default\n  \n          if (condition.includes('clear')) {\n            iconPath = (hour >= 6 && hour < 18)\n              ? '/images/weather-icons/clear-day.png'\n              : '/images/weather-icons/clear-night.png';\n          } else if (condition.includes('cloud')) {\n            iconPath = '/images/weather-icons/cloudy.png';\n          } else if (condition.includes('rain')) {\n            iconPath = description.includes('drizzle')\n              ? '/images/weather-icons/drizzle.png'\n              : '/images/weather-icons/rain.png';\n          } else if (condition.includes('snow')) {\n            iconPath = '/images/weather-icons/snow.png';\n          } else if (condition.includes('thunderstorm')) {\n            iconPath = '/images/weather-icons/thunderstorm.png';\n          } else if (condition.includes('mist') || condition.includes('fog') || condition.includes('haze')) {\n            iconPath = '/images/weather-icons/fog.png';\n          }\n  \n          dailyForecasts.push({\n            date: dateKey,\n            temperature: Math.round(item.main.temp),\n            condition: item.weather[0].main,\n            icon: iconPath\n          });\n  \n          if (dailyForecasts.length === 5) break; // Stop after 5 unique days\n        }\n      }\n  \n      console.log('Fetched weather data (cleaned):', dailyForecasts);\n      setWeatherData(dailyForecasts);\n    } catch (error) {\n      console.error('Error fetching weather:', error);\n      setWeatherError(error instanceof Error ? error.message : 'Failed to load weather data');\n    } finally {\n      setWeatherLoading(false);\n    }\n  };\n  \n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <div className=\"header-content\">\n          <h1 className=\"dashboard-title\">Outfit Planner</h1>\n        </div>\n        <button onClick={() => navigate('/')} className=\"btn btn-secondary\" style={{\n          fontSize: \"16px\",\n          color: \"#fefefd\",\n          backgroundColor: \"#d07d6b\",\n          padding: \"10px 20px\",\n          textTransform: \"uppercase\",\n          fontWeight: \"bold\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          cursor: \"pointer\",\n          display: \"inline-block\",\n          textDecoration: \"none\",\n          transition: \"all 0.3s ease-in-out\"\n        }}>\n          Back to Dashboard\n        </button>\n      </div>\n\n      <div className=\"outfit-planner-tabs\">\n      <button \n          className={`tab-button ${activeTab === 'planner' ? 'active' : ''}`}\n          onClick={() => setActiveTab('planner')}\n          style={{\n            fontSize: \"16px\",\n            color: activeTab === 'planner' ? \"#d07d6b\" : \"#3b3b3b\",\n            backgroundColor: \"transparent\",\n            padding: \"10px 20px\",\n            textTransform: \"uppercase\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            borderBottom: activeTab === 'planner' ? \"2px solid #d07d6b\" : \"2px solid transparent\",\n            cursor: \"pointer\",\n            display: \"inline-block\",\n            textDecoration: \"none\",\n            transition: \"all 0.3s ease-in-out\"\n          }}\n        >\n          Outfit Planner\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'calendar' ? 'active' : ''}`}\n          onClick={() => setActiveTab('calendar')}\n          style={{\n            fontSize: \"16px\",\n            color: activeTab === 'calendar' ? \"#d07d6b\" : \"#3b3b3b\",\n            backgroundColor: \"transparent\",\n            padding: \"10px 20px\",\n            textTransform: \"uppercase\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            borderBottom: activeTab === 'calendar' ? \"2px solid #d07d6b\" : \"2px solid transparent\",\n            cursor: \"pointer\",\n            display: \"inline-block\",\n            textDecoration: \"none\",\n            transition: \"all 0.3s ease-in-out\"\n          }}\n        >\n          Calendar\n        </button>\n      </div>\n\n      {activeTab === 'calendar' && (\n        <div className=\"outfit-calendar-container\">\n          <div className=\"calendar-header\">\n            <h2 className=\"section-title\">Outfit Calendar</h2>\n            <div className=\"calendar-view-toggle\">\n              <button \n                className={`btn btn-secondary ${showCalendarView ? 'active' : ''}`}\n                onClick={() => setShowCalendarView(true)}\n                style={{\n                  fontSize: \"16px\",\n                  color: showCalendarView ? \"#fefefd\" : \"#6b7280\",\n                  backgroundColor: showCalendarView ? \"#d07d6b\" : \"#f3f4f6\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\"\n                }}\n              >\n                Calendar View\n              </button>\n              <button \n                className={`btn btn-secondary ${!showCalendarView ? 'active' : ''}`}\n                onClick={() => setShowCalendarView(false)}\n                style={{\n                  fontSize: \"16px\",\n                  color: !showCalendarView ? \"#fefefd\" : \"#6b7280\",\n                  backgroundColor: !showCalendarView ? \"#d07d6b\" : \"#f3f4f6\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\"\n                }}\n              >\n                List View\n              </button>\n            </div>\n          </div>\n\n          {!showCalendarView ? (\n            <div className=\"scheduled-outfits-list\">\n              {scheduledOutfits.length === 0 ? (\n                <div className=\"no-items-message\">\n                  <p>No outfits scheduled yet.</p>\n                </div>\n              ) : (\n                scheduledOutfits\n                  .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n                  .map((schedule) => (\n                    <div key={schedule.id} className=\"scheduled-outfit-card\">\n                      <div className=\"scheduled-outfit-date\">\n                        {formatDate(schedule.date)}\n                      </div>\n                      {schedule.outfit && (\n                        <div className=\"scheduled-outfit-details\">\n                          <div className=\"outfit-info\">\n                            <h4>{schedule.outfit.name}</h4>\n                            {schedule.outfit.occasion && (\n                              <span className=\"outfit-occasion\">{schedule.outfit.occasion}</span>\n                            )}\n                          </div>\n                          <div className=\"outfit-preview\">\n                            {getSortedItems(schedule.outfit.items).map((item) => (\n                              <img\n                                key={item.id}\n                                src={item.image_url}\n                                alt={item.name || item.category}\n                                className=\"outfit-item-image\"\n                                style={{ width: '40px', height: '40px', objectFit: 'cover', borderRadius: '4px', marginRight: '4px' }}\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                      <div className=\"scheduled-outfit-actions\">\n                        <button \n                          onClick={() => handleDeleteSchedule(schedule.id)}\n                          className=\"btn btn-secondary\"\n                          style={{\n                            fontSize: \"14px\",\n                            color: \"#fefefd\",\n                            backgroundColor: \"#ef4444\",\n                            padding: \"8px 16px\",\n                            textTransform: \"uppercase\",\n                            fontWeight: \"bold\",\n                            borderRadius: \"5px\",\n                            border: \"none\",\n                            cursor: \"pointer\"\n                          }}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  ))\n              )}\n            </div>\n          ) : (\n            <div className=\"calendar-view\">\n              {!isGoogleCalendarConnected ? (\n                <div className=\"no-items-message\">\n                  <p>Please connect your Google Calendar to view your scheduled outfits in calendar view.</p>\n                  <button onClick={connectGoogleCalendar} className=\"btn btn-secondary\" style={{\n                    fontSize: \"16px\",\n                    color: \"#fefefd\",\n                    backgroundColor: \"#d07d6b\",\n                    padding: \"10px 20px\",\n                    textTransform: \"uppercase\",\n                    fontWeight: \"bold\",\n                    borderRadius: \"5px\",\n                    border: \"none\",\n                    cursor: \"pointer\",\n                    display: \"inline-block\",\n                    textDecoration: \"none\",\n                    transition: \"all 0.3s ease-in-out\"\n                  }}>\n                    Connect Google Calendar\n                  </button>\n                </div>\n              ) : calendarEvents.length === 0 ? (\n                <div className=\"no-items-message\">\n                  <p>No upcoming events found in your Google Calendar.</p>\n                  <p>Schedule an outfit from the Outfit Planner tab to see it here.</p>\n                </div>\n              ) : (() => {\n                console.log('Rendering Kanban calendar view with events:', calendarEvents);\n                \n                // Group events by date\n                const groupedEvents = calendarEvents.reduce((acc, event) => {\n                  try {\n                    // Validate the date string\n                    const dateStr = event.start.dateTime;\n                    if (!dateStr) {\n                      console.warn('Event missing start date:', event);\n                      return acc;\n                    }\n\n                    // Create a date object in the user's timezone\n                    const date = new Date(dateStr);\n                    if (isNaN(date.getTime())) {\n                      console.warn('Invalid date value:', dateStr);\n                      return acc;\n                    }\n\n                    // Use the local date string to ensure correct timezone handling\n                    const dateKey = new Date(event.start.dateTime).toLocaleDateString('en-CA');\n                    if (!acc[dateKey]) {\n                      acc[dateKey] = [];\n                    }\n                    acc[dateKey].push(event);\n                  } catch (error) {\n                    console.error('Error processing event date:', error);\n                  }\n                  return acc;\n                }, {} as Record<string, GoogleCalendarEvent[]>);\n                \n                // Get the next 5 days starting from today\n                const today = new Date();\n                const nextFiveDays = Array.from({ length: 5 }, (_, i) => {\n                  const localMidnight = new Date();\n                  localMidnight.setHours(0, 0, 0, 0); // Reset to today at 00:00 local time\n                  localMidnight.setDate(localMidnight.getDate() + i); // Add days\n                  return localMidnight.toISOString().split('T')[0]; // Still returns YYYY-MM-DD\n                });\n                \n                // Sort dates to ensure they're in chronological order\n                const sortedDates = nextFiveDays.sort((a, b) => {\n                  try {\n                    return new Date(a).getTime() - new Date(b).getTime();\n                  } catch (error) {\n                    console.error('Error sorting dates:', error);\n                    return 0;\n                  }\n                });\n                \n                console.log('Grouped events by date:', groupedEvents);\n                console.log('Next five days:', sortedDates);\n                \n                return (\n                  <div className=\"kanban-calendar-view\">\n                    {sortedDates.map((date) => {\n                      const events = groupedEvents[date] || [];\n                      console.log(`Rendering column for date ${date} with ${events.length} events`);\n                      \n                      // Find the outfit scheduled for this date using the specified format\n                      const scheduleMatch = scheduledOutfits.find(s => s.date === date);\n                      const outfit = scheduleMatch?.outfit;\n                      console.log(`Outfit for date ${date}:`, outfit);\n                      console.log('Scheduled Outfits:', scheduledOutfits);\n                      console.log('Checking for outfit on:', date);\n                      \n                      // Create a date object for display\n                      const displayDate = new Date(date);\n                      \n                      return (\n                        <div key={date} className=\"kanban-day-column\">\n                          <div className=\"kanban-day-header\">\n                            <h3>{displayDate.toLocaleDateString('en-US', { \n                              weekday: 'short', \n                              month: 'short', \n                              day: 'numeric' \n                            })}</h3>\n                            \n                            {/* Add weather information */}\n                            {weatherData.length > 0 && (\n                              <div className=\"day-weather\">\n                                {weatherLoading ? (\n                                  <div className=\"weather-loading\">\n                                    <div className=\"spinner\" style={{ width: '16px', height: '16px', marginRight: '4px' }}></div>\n                                    Loading...\n                                  </div>\n                                ) : weatherError ? (\n                                  <div className=\"weather-error\">\n                                    <span>Weather unavailable</span>\n                                  </div>\n                                ) : (\n                                  (() => {\n                                    const dayWeather = weatherData.find(w => w.date === date);\n                                    if (dayWeather) {\n                                      return (\n                                        <div className=\"forecast-day\" style={{\n                                          padding: '8px',\n                                          backgroundColor: '#2462A2',\n                                          color: 'white',\n                                          borderRadius: '8px',\n                                          textAlign: 'center',\n                                          minWidth: '80px',\n                                          transition: 'transform 0.2s ease'\n                                        }}>\n                                          <p className=\"forecast-date\" style={{\n                                            fontSize: '0.9rem',\n                                            color: 'rgba(255, 255, 255, 0.9)',\n                                            margin: '0 0 0.5rem 0',\n                                            fontWeight: '500'\n                                          }}>\n                                            {displayDate.toLocaleDateString('en-US', { weekday: 'short' })}\n                                          </p>\n                                          <img \n                                            src={dayWeather.icon} \n                                            alt={dayWeather.condition} \n                                            className=\"forecast-icon\" \n                                            style={{ \n                                              width: '36px', \n                                              height: '36px',\n                                              margin: '0.25rem 0',\n                                              filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',\n                                              transition: 'filter 0.3s ease',\n                                              objectFit: 'contain',\n                                              padding: '2px',\n                                              background: 'transparent'\n                                            }} \n                                          />\n                                          <p className=\"forecast-temp\" style={{\n                                            fontSize: '1.1rem',\n                                            fontWeight: '600',\n                                            color: 'white',\n                                            margin: '0'\n                                          }}>{dayWeather.temperature}°</p>\n                                        </div>\n                                      );\n                                    }\n                                    return null;\n                                  })()\n                                )}\n                              </div>\n                            )}\n                          </div>\n                          \n                          {/* Outfit bar at the top */}\n                          <div className={`kanban-outfit-bar ${outfit ? 'has-outfit' : 'no-outfit'}`}>\n                            {outfit ? (\n                              <div className=\"outfit-bar-content\">\n                                <div className=\"outfit-bar-title\">\n                                  <h4>{outfit.name}</h4>\n                                  {outfit.occasion && <span className=\"outfit-occasion\">{outfit.occasion}</span>}\n                                </div>\n                                <div className=\"outfit-bar-preview\">\n                                  {getSortedItems(outfit.items).map((item) => (\n                                    <img\n                                      key={item.id}\n                                      src={item.image_url}\n                                      alt={item.name || item.category}\n                                      className=\"outfit-bar-item-image\"\n                                    />\n                                  ))}\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"no-outfit-message\">\n                                <p>No outfit scheduled</p>\n                              </div>\n                            )}\n                          </div>\n                          \n                          {/* Events for this day */}\n                          <div className=\"kanban-day-events\">\n                            {events.map((event) => {\n                              try {\n                                const startTime = new Date(event.start.dateTime);\n                                if (isNaN(startTime.getTime())) {\n                                  console.warn('Invalid start time for event:', event);\n                                  return null;\n                                }\n\n                                return (\n                                  <div key={event.id} className=\"kanban-event\">\n                                    <div className=\"event-time\">\n                                      {startTime.toLocaleTimeString([], { \n                                        hour: '2-digit', \n                                        minute: '2-digit' \n                                      })}\n                                    </div>\n                                    <div className=\"event-content\">\n                                      <h4>{event.summary}</h4>\n                                      {event.description && (\n                                        <p className=\"event-description\">{event.description}</p>\n                                      )}\n                                    </div>\n                                  </div>\n                                );\n                              } catch (error) {\n                                console.error('Error rendering event:', error);\n                                return null;\n                              }\n                            })}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })()}\n            </div>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'planner' && (\n        <div className=\"outfit-planner-container\">\n          <div className=\"outfit-preview-section\">\n            <h2 className=\"section-title\">Current Outfit</h2>\n            <div className=\"outfit-preview-grid\">\n              {getSortedItems(selectedItems).map((item) => (\n                <div \n                  key={item.id} \n                  className=\"outfit-preview-item\"\n                  onClick={() => handleItemUnselect(item)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <img\n                    src={item.image_url}\n                    alt={item.name || item.category}\n                    className=\"outfit-preview-image\"\n                  />\n                  <div className=\"outfit-preview-details\">\n                    <h3>{item.name || item.category}</h3>\n                    {item.brand && <p className=\"item-brand\">{item.brand}</p>}\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"outfit-actions\">\n              <button onClick={handleRandomize} className=\"btn btn-primary\" style={{\n                fontSize: \"16px\",\n                color: \"#fefefd\",\n                backgroundColor: \"#d07d6b\",\n                padding: \"10px 20px\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                display: \"inline-block\",\n                textDecoration: \"none\",\n                transition: \"all 0.3s ease-in-out\"\n              }}>\n                Randomize Outfit\n              </button>\n              <button\n                onClick={() => setShowSaveModal(true)}\n                disabled={selectedItems.length === 0}\n                className=\"btn btn-primary\"\n                style={{\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#d07d6b\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\",\n                  opacity: selectedItems.length === 0 ? 0.5 : 1\n                }}\n              >\n                Save Outfit\n              </button>\n            </div>\n          </div>\n\n          <div className=\"clothing-selection-section\">\n            <h2 className=\"section-title\">Select Items</h2>\n            <div className=\"category-filters\">\n              <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                className=\"form-select\"\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map(category => (\n                  <option key={category} value={category}>{category}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"clothing-selection-grid\">\n              {clothingItems\n                .filter(item => !selectedCategory || item.category === selectedCategory)\n                .map((item) => (\n                  <div\n                    key={item.id}\n                    className={`clothing-selection-item ${\n                      selectedItems.some(i => i.id === item.id) ? 'selected' : ''\n                    }`}\n                    onClick={() => handleItemSelect(item)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    <img\n                      src={item.image_url}\n                      alt={item.name || item.category}\n                      className=\"clothing-selection-image\"\n                    />\n                    <div className=\"clothing-selection-details\">\n                      <h3>{item.name || item.category}</h3>\n                      {item.brand && <p className=\"item-brand\">{item.brand}</p>}\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n\n          <div className=\"saved-outfits-section\">\n            <h2 className=\"section-title\">Saved Outfits</h2>\n            <div className=\"saved-outfits-grid\">\n              {savedOutfits.map((outfit) => (\n                <div key={outfit.id} className=\"saved-outfit-card\">\n                  <h3>{outfit.name}</h3>\n                  {outfit.occasion ? (\n                    <p className=\"outfit-occasion\">{outfit.occasion}</p>\n                  ) : (\n                    <p className=\"outfit-occasion\" style={{ visibility: \"hidden\" }}>No occasion</p>\n                  )}\n                  <div className=\"saved-outfit-preview\">\n                    {getSortedItems(outfit.items).map((item) => (\n                      <img\n                        key={item.id}\n                        src={item.image_url}\n                        alt={item.name || item.category}\n                        className=\"saved-outfit-item-image\"\n                      />\n                    ))}\n                  </div>\n                  <div className=\"saved-outfit-actions\" style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    width: \"100%\"\n                  }}>\n                    <button\n                      onClick={() => {\n                        setSelectedItems(outfit.items);\n                        window.scrollTo({ top: 0, behavior: 'smooth' });\n                      }}\n                      className=\"btn btn-secondary\"\n                      style={{\n                        fontSize: \"16px\",\n                        color: \"#fefefd\",\n                        backgroundColor: \"#d07d6b\",\n                        padding: \"10px 20px\",\n                        textTransform: \"uppercase\",\n                        fontWeight: \"bold\",\n                        borderRadius: \"5px\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        display: \"inline-block\",\n                        textDecoration: \"none\",\n                        transition: \"all 0.3s ease-in-out\",\n                        width: \"100%\"\n                      }}\n                    >\n                      Load\n                    </button>\n                    <button\n                      onClick={() => {\n                        setSelectedOutfitForSchedule(outfit);\n                        setShowScheduleModal(true);\n                      }}\n                      className=\"btn btn-secondary\"\n                      style={{\n                        fontSize: \"16px\",\n                        color: \"#fefefd\",\n                        backgroundColor: \"#d07d6b\",\n                        padding: \"10px 20px\",\n                        textTransform: \"uppercase\",\n                        fontWeight: \"bold\",\n                        borderRadius: \"5px\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        display: \"inline-block\",\n                        textDecoration: \"none\",\n                        transition: \"all 0.3s ease-in-out\",\n                        width: \"100%\"\n                      }}\n                    >\n                      Schedule\n                    </button>\n                    <button\n                      onClick={() => handleDeleteOutfit(outfit.id)}\n                      className=\"btn btn-danger\"\n                      style={{\n                        fontSize: \"16px\",\n                        color: \"#fefefd\",\n                        backgroundColor: \"#ef4444\",\n                        padding: \"10px 20px\",\n                        textTransform: \"uppercase\",\n                        fontWeight: \"bold\",\n                        borderRadius: \"5px\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        display: \"inline-block\",\n                        textDecoration: \"none\",\n                        transition: \"all 0.3s ease-in-out\",\n                        width: \"100%\"\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Save Outfit Modal */}\n      {showSaveModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2 className=\"section-title\">Save Outfit</h2>\n            <div className=\"form-group\">\n              <label>Outfit Name:</label>\n              <input\n                type=\"text\"\n                value={outfitName}\n                onChange={(e) => setOutfitName(e.target.value)}\n                placeholder=\"Enter a name for your outfit\"\n                className=\"form-input\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Occasion (optional):</label>\n              <input\n                type=\"text\"\n                value={outfitOccasion}\n                onChange={(e) => setOutfitOccasion(e.target.value)}\n                placeholder=\"Enter an occasion\"\n                className=\"form-input\"\n              />\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                onClick={() => {\n                  setShowSaveModal(false);\n                  setOutfitName('');\n                  setOutfitOccasion('');\n                }}\n                className=\"btn btn-secondary\"\n                style={{\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#d07d6b\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\"\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSaveOutfit}\n                disabled={!outfitName}\n                className=\"btn btn-primary\"\n                style={{\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#d07d6b\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\",\n                  opacity: !outfitName ? 0.5 : 1\n                }}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Schedule Outfit Modal */}\n      {showScheduleModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2 className=\"section-title\">Schedule Outfit</h2>\n            <div className=\"form-group\">\n              <label>Select Date:</label>\n              <input\n                type=\"date\"\n                value={scheduleDate}\n                onChange={(e) => setScheduleDate(e.target.value)}\n                className=\"form-input\"\n                min={new Date().toISOString().split('T')[0]}\n              />\n            </div>\n            <div className=\"scheduled-outfit-preview\">\n              <h3>{selectedOutfitForSchedule?.name}</h3>\n              {selectedOutfitForSchedule?.occasion && (\n                <p className=\"outfit-occasion\">{selectedOutfitForSchedule.occasion}</p>\n              )}\n              <div className=\"outfit-preview-grid\">\n                {selectedOutfitForSchedule?.items && getSortedItems(selectedOutfitForSchedule.items).map((item) => (\n                  <div key={item.id} className=\"outfit-preview-item\">\n                    <img\n                      src={item.image_url}\n                      alt={item.name || item.category}\n                      className=\"outfit-preview-image\"\n                    />\n                    <div className=\"outfit-preview-details\">\n                      <h3>{item.name || item.category}</h3>\n                      {item.brand && <p className=\"item-brand\">{item.brand}</p>}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                onClick={() => {\n                  setShowScheduleModal(false);\n                  setSelectedOutfitForSchedule(null);\n                  setScheduleDate('');\n                }}\n                className=\"btn btn-secondary\"\n                style={{\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#d07d6b\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\"\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleScheduleOutfit}\n                disabled={!scheduleDate}\n                className=\"btn btn-primary\"\n                style={{\n                  fontSize: \"16px\",\n                  color: \"#fefefd\",\n                  backgroundColor: \"#d07d6b\",\n                  padding: \"10px 20px\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  textDecoration: \"none\",\n                  transition: \"all 0.3s ease-in-out\",\n                  opacity: !scheduleDate ? 0.5 : 1\n                }}\n              >\n                Schedule\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OutfitPlanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}