{"ast":null,"code":"var _jsxFileName = \"/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/components/WeatherWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherWidget = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n        if (!apiKey) {\n          throw new Error('OpenWeather API key is not configured');\n        }\n        const city = 'Toronto'; // You can make this dynamic based on user location\n\n        // Fetch current weather\n        const currentWeatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n        if (!currentWeatherResponse.ok) {\n          throw new Error('Failed to fetch current weather data');\n        }\n        const currentWeatherData = await currentWeatherResponse.json();\n        setWeather({\n          temperature: Math.round(currentWeatherData.main.temp),\n          condition: currentWeatherData.weather[0].main,\n          icon: `http://openweathermap.org/img/wn/${currentWeatherData.weather[0].icon}@2x.png`\n        });\n\n        // Fetch 5-day forecast\n        const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n        if (!forecastResponse.ok) {\n          throw new Error('Failed to fetch forecast data');\n        }\n        const forecastData = await forecastResponse.json();\n\n        // Process forecast data to get one reading per day at noon\n        const dailyForecasts = forecastData.list.filter((item, index) => index % 8 === 0) // Get one reading per day (every 8th item as data is in 3-hour intervals)\n        .map(item => ({\n          date: new Date(item.dt * 1000).toLocaleDateString('en-US', {\n            weekday: 'short'\n          }),\n          temperature: Math.round(item.main.temp),\n          condition: item.weather[0].main,\n          icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`\n        })).slice(0, 5); // Get only 5 days\n\n        setForecast(dailyForecasts);\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n        setError(error instanceof Error ? error.message : 'Failed to load weather data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          style: {\n            marginRight: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), \"Loading weather...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#991b1b'\n          },\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.875rem',\n            color: '#6b7280'\n          },\n          children: \"Please check your OpenWeather API key configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#991b1b'\n          },\n          children: \"Unable to load weather data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.875rem',\n            color: '#6b7280'\n          },\n          children: \"Please check your OpenWeather API key configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: weather.icon,\n        alt: weather.condition,\n        className: \"weather-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temperature\",\n          children: [weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"condition\",\n          children: weather.condition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: forecast.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forecast-date\",\n          children: day.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: day.icon,\n          alt: day.condition,\n          className: \"forecast-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forecast-temp\",\n          children: [day.temperature, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherWidget, \"PYhPtYZwfNSD29TrGz1uQ0B2Xpo=\");\n_c = WeatherWidget;\nvar _c;\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WeatherWidget","_s","weather","setWeather","forecast","setForecast","loading","setLoading","error","setError","fetchWeather","apiKey","process","env","REACT_APP_OPENWEATHER_API_KEY","Error","city","currentWeatherResponse","fetch","ok","currentWeatherData","json","temperature","Math","round","main","temp","condition","icon","forecastResponse","forecastData","dailyForecasts","list","filter","item","index","map","date","Date","dt","toLocaleDateString","weekday","slice","console","message","className","children","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","fontSize","src","alt","day","_c","$RefreshReg$"],"sources":["/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/components/WeatherWidget.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport '../styles/main.css';\n\ninterface WeatherData {\n  temperature: number;\n  condition: string;\n  icon: string;\n}\n\ninterface ForecastData {\n  date: string;\n  temperature: number;\n  condition: string;\n  icon: string;\n}\n\nexport const WeatherWidget: React.FC = () => {\n  const [weather, setWeather] = useState<WeatherData | null>(null);\n  const [forecast, setForecast] = useState<ForecastData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n        \n        if (!apiKey) {\n          throw new Error('OpenWeather API key is not configured');\n        }\n\n        const city = 'Toronto'; // You can make this dynamic based on user location\n        \n        // Fetch current weather\n        const currentWeatherResponse = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n        );\n        \n        if (!currentWeatherResponse.ok) {\n          throw new Error('Failed to fetch current weather data');\n        }\n\n        const currentWeatherData = await currentWeatherResponse.json();\n        \n        setWeather({\n          temperature: Math.round(currentWeatherData.main.temp),\n          condition: currentWeatherData.weather[0].main,\n          icon: `http://openweathermap.org/img/wn/${currentWeatherData.weather[0].icon}@2x.png`\n        });\n\n        // Fetch 5-day forecast\n        const forecastResponse = await fetch(\n          `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`\n        );\n\n        if (!forecastResponse.ok) {\n          throw new Error('Failed to fetch forecast data');\n        }\n\n        const forecastData = await forecastResponse.json();\n        \n        // Process forecast data to get one reading per day at noon\n        const dailyForecasts = forecastData.list\n          .filter((item: any, index: number) => index % 8 === 0) // Get one reading per day (every 8th item as data is in 3-hour intervals)\n          .map((item: any) => ({\n            date: new Date(item.dt * 1000).toLocaleDateString('en-US', { weekday: 'short' }),\n            temperature: Math.round(item.main.temp),\n            condition: item.weather[0].main,\n            icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`\n          }))\n          .slice(0, 5); // Get only 5 days\n\n        setForecast(dailyForecasts);\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n        setError(error instanceof Error ? error.message : 'Failed to load weather data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeather();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"weather-widget\">\n        <div className=\"weather-info\">\n          <div className=\"spinner\" style={{ marginRight: '0.5rem' }}></div>\n          Loading weather...\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"weather-widget\">\n        <div className=\"weather-info\">\n          <p style={{ color: '#991b1b' }}>Error: {error}</p>\n          <p style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n            Please check your OpenWeather API key configuration\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!weather) {\n    return (\n      <div className=\"weather-widget\">\n        <div className=\"weather-info\">\n          <p style={{ color: '#991b1b' }}>Unable to load weather data</p>\n          <p style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n            Please check your OpenWeather API key configuration\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"weather-widget\">\n      <div className=\"weather-info\">\n        <img src={weather.icon} alt={weather.condition} className=\"weather-icon\" />\n        <div className=\"weather-details\">\n          <p className=\"temperature\">{weather.temperature}°C</p>\n          <p className=\"condition\">{weather.condition}</p>\n        </div>\n      </div>\n      <div className=\"forecast-container\">\n        {forecast.map((day, index) => (\n          <div key={index} className=\"forecast-day\">\n            <p className=\"forecast-date\">{day.date}</p>\n            <img src={day.icon} alt={day.condition} className=\"forecast-icon\" />\n            <p className=\"forecast-temp\">{day.temperature}°</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}