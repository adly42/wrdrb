{"ast":null,"code":"var _jsxFileName = \"/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/components/SupabaseTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SupabaseTest = () => {\n  _s();\n  const [status, setStatus] = useState('loading');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const testConnection = async () => {\n      try {\n        // Test 1: Basic connection\n        const {\n          data,\n          error\n        } = await supabase.from('outfits').select('count');\n        if (error) {\n          throw error;\n        }\n\n        // Test 2: Auth status\n        const {\n          data: {\n            session\n          },\n          error: authError\n        } = await supabase.auth.getSession();\n        if (authError) {\n          throw authError;\n        }\n        setStatus('success');\n        setMessage('Successfully connected to Supabase! Database and auth are working.');\n      } catch (error) {\n        console.error('Supabase connection error:', error);\n        setStatus('error');\n        setMessage(`Connection error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    };\n    testConnection();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Supabase Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        backgroundColor: status === 'loading' ? '#f3f4f6' : status === 'success' ? '#dcfce7' : '#fee2e2'\n      },\n      children: [status === 'loading' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          style: {\n            marginRight: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \"Testing connection...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), status === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#065f46'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#991b1b'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SupabaseTest, \"bUVNytV8L+ZsXMBdXp09FojWUSY=\");\n_c = SupabaseTest;\nvar _c;\n$RefreshReg$(_c, \"SupabaseTest\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","SupabaseTest","_s","status","setStatus","message","setMessage","testConnection","data","error","from","select","session","authError","auth","getSession","console","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","display","alignItems","marginRight","color","_c","$RefreshReg$"],"sources":["/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/components/SupabaseTest.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport '../styles/main.css';\n\nexport const SupabaseTest: React.FC = () => {\n  const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading');\n  const [message, setMessage] = useState<string>('');\n\n  useEffect(() => {\n    const testConnection = async () => {\n      try {\n        // Test 1: Basic connection\n        const { data, error } = await supabase.from('outfits').select('count');\n        \n        if (error) {\n          throw error;\n        }\n\n        // Test 2: Auth status\n        const { data: { session }, error: authError } = await supabase.auth.getSession();\n        \n        if (authError) {\n          throw authError;\n        }\n\n        setStatus('success');\n        setMessage('Successfully connected to Supabase! Database and auth are working.');\n      } catch (error) {\n        console.error('Supabase connection error:', error);\n        setStatus('error');\n        setMessage(`Connection error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    };\n\n    testConnection();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h2 className=\"section-title\">Supabase Connection Test</h2>\n      <div className=\"card\" style={{\n        backgroundColor: status === 'loading' ? '#f3f4f6' : \n                        status === 'success' ? '#dcfce7' : \n                        '#fee2e2'\n      }}>\n        {status === 'loading' && (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div className=\"spinner\" style={{ marginRight: '0.5rem' }}></div>\n            Testing connection...\n          </div>\n        )}\n        {status === 'success' && (\n          <div style={{ color: '#065f46' }}>\n            {message}\n          </div>\n        )}\n        {status === 'error' && (\n          <div style={{ color: '#991b1b' }}>\n            {message}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}