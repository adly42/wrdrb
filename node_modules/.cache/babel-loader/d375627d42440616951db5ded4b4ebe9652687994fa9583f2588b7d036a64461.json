{"ast":null,"code":"var _jsxFileName = \"/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/pages/OutfitPlanner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OutfitPlanner = () => {\n  _s();\n  const navigate = useNavigate();\n  const [clothingItems, setClothingItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [savedOutfits, setSavedOutfits] = useState([]);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [outfitName, setOutfitName] = useState('');\n  const [outfitOccasion, setOutfitOccasion] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [scheduledOutfits, setScheduledOutfits] = useState([]);\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [selectedOutfitForSchedule, setSelectedOutfitForSchedule] = useState(null);\n  const [scheduleDate, setScheduleDate] = useState('');\n  const [isGoogleCalendarConnected, setIsGoogleCalendarConnected] = useState(false);\n  const [activeTab, setActiveTab] = useState('planner');\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [showCalendarView, setShowCalendarView] = useState(false);\n  const categories = ['Jacket', 'Shirt', 'T-Shirt', 'Sweater', 'Dress', 'Skirt', 'Pants', 'Shorts', 'Jeans', 'Shoes', 'Accessories'];\n  const categoryOrder = ['Headwear', 'Jacket', 'Shirt', 'T-Shirt', 'Sweater', 'Dress', 'Skirt', 'Pants', 'Shorts', 'Jeans', 'Shoes', 'Accessories'];\n  useEffect(() => {\n    fetchClothingItems();\n    fetchSavedOutfits();\n    checkOutfitSchedulesTable();\n    fetchScheduledOutfits();\n    ensureUserSettingsTable();\n    checkGoogleCalendarConnection();\n  }, []);\n  const fetchClothingItems = async () => {\n    try {\n      // Get the current user's ID\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      const {\n        data,\n        error\n      } = await supabase.from('clothing_items').select('*').eq('user_id', user.id);\n      if (error) throw error;\n      if (data) setClothingItems(data);\n    } catch (error) {\n      console.error('Error fetching clothing items:', error);\n    }\n  };\n  const fetchSavedOutfits = async () => {\n    try {\n      // Get the current user's ID\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      const {\n        data,\n        error\n      } = await supabase.from('outfits').select('*').eq('user_id', user.id).order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      if (data) {\n        // Fetch the actual clothing items for each outfit\n        const outfitsWithItems = await Promise.all(data.map(async outfit => {\n          const {\n            data: items\n          } = await supabase.from('clothing_items').select('*').in('id', outfit.items);\n          return {\n            ...outfit,\n            items: items || []\n          };\n        }));\n        setSavedOutfits(outfitsWithItems);\n      }\n    } catch (error) {\n      console.error('Error fetching saved outfits:', error);\n    }\n  };\n  const fetchScheduledOutfits = async () => {\n    try {\n      console.log('Fetching scheduled outfits...');\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // First check if the outfit_schedules table exists\n      const {\n        error: tableCheckError\n      } = await supabase.from('outfit_schedules').select('id').limit(1);\n      if (tableCheckError) {\n        console.log('Outfit schedules table may not exist yet:', tableCheckError);\n        return;\n      }\n\n      // Fetch scheduled outfits with outfit details\n      const {\n        data: schedules,\n        error: schedulesError\n      } = await supabase.from('outfit_schedules').select('*').eq('user_id', user.id).order('date', {\n        ascending: true\n      });\n      if (schedulesError) {\n        console.error('Error fetching scheduled outfits:', schedulesError);\n        return;\n      }\n      console.log('Fetched scheduled outfits:', schedules);\n      if (schedules && schedules.length > 0) {\n        // Fetch outfit details for each schedule\n        const outfitIds = schedules.map(schedule => schedule.outfit_id);\n        const {\n          data: outfits,\n          error: outfitsError\n        } = await supabase.from('outfits').select('*').in('id', outfitIds);\n        if (outfitsError) {\n          console.error('Error fetching outfit details:', outfitsError);\n          return;\n        }\n        console.log('Fetched outfit details:', outfits);\n\n        // Fetch clothing items for each outfit\n        const outfitItemsMap = new Map();\n        for (const outfit of outfits) {\n          const {\n            data: items,\n            error: itemsError\n          } = await supabase.from('clothing_items').select('*').in('id', outfit.items);\n          if (itemsError) {\n            console.error(`Error fetching items for outfit ${outfit.id}:`, itemsError);\n            continue;\n          }\n          outfitItemsMap.set(outfit.id, items);\n        }\n        console.log('Fetched clothing items for outfits:', outfitItemsMap);\n\n        // Combine schedules with outfit details and items\n        const schedulesWithOutfits = schedules.map(schedule => {\n          const outfit = outfits.find(o => o.id === schedule.outfit_id);\n          if (outfit) {\n            const items = outfitItemsMap.get(outfit.id) || [];\n            return {\n              ...schedule,\n              outfit: {\n                ...outfit,\n                items\n              }\n            };\n          }\n          return schedule;\n        });\n        console.log('Combined schedules with outfits:', schedulesWithOutfits);\n        setScheduledOutfits(schedulesWithOutfits);\n      } else {\n        console.log('No scheduled outfits found');\n        setScheduledOutfits([]);\n      }\n    } catch (error) {\n      console.error('Error in fetchScheduledOutfits:', error);\n    }\n  };\n  const checkOutfitSchedulesTable = async () => {\n    try {\n      // Try to query the table to see if it exists\n      const {\n        error\n      } = await supabase.from('outfit_schedules').select('id').limit(1);\n      if (error) {\n        console.error('Error checking outfit_schedules table:', error);\n\n        // If the error indicates the table doesn't exist, create it\n        if (error.code === '42P01') {\n          // PostgreSQL error code for undefined_table\n          console.log('Creating outfit_schedules table...');\n          await createOutfitSchedulesTable();\n        }\n      } else {\n        console.log('outfit_schedules table exists');\n      }\n    } catch (error) {\n      console.error('Error in checkOutfitSchedulesTable:', error);\n    }\n  };\n  const createOutfitSchedulesTable = async () => {\n    try {\n      // This is a simplified approach - in a real app, you'd use migrations\n      // or have the table created by your backend\n      console.log('This feature requires the outfit_schedules table to be created in Supabase.');\n      console.log('Please run the SQL in the outfit_schedules.sql file in your Supabase SQL editor.');\n\n      // Show a more user-friendly message\n      alert('The outfit scheduling feature requires database setup. Please contact the administrator.');\n    } catch (error) {\n      console.error('Error creating outfit_schedules table:', error);\n    }\n  };\n  const handleRandomize = () => {\n    const newSelectedItems = [];\n    const usedCategories = new Set();\n\n    // Shuffle the clothing items\n    const shuffledItems = [...clothingItems].sort(() => Math.random() - 0.5);\n\n    // Select one item from each category\n    for (const item of shuffledItems) {\n      if (!usedCategories.has(item.category)) {\n        newSelectedItems.push(item);\n        usedCategories.add(item.category);\n      }\n    }\n    setSelectedItems(newSelectedItems);\n  };\n  const handleItemSelect = item => {\n    // Remove any existing item of the same category\n    const filteredItems = selectedItems.filter(i => i.category !== item.category);\n    setSelectedItems([...filteredItems, item]);\n  };\n  const handleSaveOutfit = async () => {\n    if (!outfitName || selectedItems.length === 0) {\n      alert('Please provide a name for the outfit and select at least one item');\n      return;\n    }\n    try {\n      // Get the current user's ID\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      console.log('Saving outfit with data:', {\n        user_id: user.id,\n        name: outfitName,\n        occasion: outfitOccasion || null,\n        items: selectedItems.map(item => item.id)\n      });\n      const {\n        data,\n        error\n      } = await supabase.from('outfits').insert([{\n        user_id: user.id,\n        name: outfitName,\n        occasion: outfitOccasion || null,\n        items: selectedItems.map(item => item.id)\n      }]).select();\n      if (error) {\n        console.error('Supabase error details:', error);\n        throw error;\n      }\n      console.log('Successfully saved outfit:', data);\n      setShowSaveModal(false);\n      setOutfitName('');\n      setOutfitOccasion('');\n      fetchSavedOutfits();\n    } catch (error) {\n      console.error('Error saving outfit:', error);\n      if (error instanceof Error) {\n        alert(`Error saving outfit: ${error.message}`);\n      } else {\n        alert('Error saving outfit. Please check the console for details.');\n      }\n    }\n  };\n  const handleDeleteOutfit = async outfitId => {\n    if (window.confirm('Are you sure you want to delete this outfit?')) {\n      try {\n        const {\n          error\n        } = await supabase.from('outfits').delete().eq('id', outfitId);\n        if (error) throw error;\n        fetchSavedOutfits();\n      } catch (error) {\n        console.error('Error deleting outfit:', error);\n        alert('Error deleting outfit');\n      }\n    }\n  };\n  const checkGoogleCalendarConnection = async () => {\n    try {\n      console.log('Checking Google Calendar connection...');\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // Check if user has Google Calendar connected\n      const {\n        data: settings,\n        error: settingsError\n      } = await supabase.from('user_settings').select('google_calendar_connected, google_access_token, google_token_expiry').eq('user_id', user.id).single();\n      if (settingsError) {\n        console.error('Error checking user settings:', settingsError);\n        return;\n      }\n      console.log('User settings for Google Calendar:', settings);\n\n      // Check if the token is expired\n      if (settings !== null && settings !== void 0 && settings.google_token_expiry && new Date(settings.google_token_expiry) < new Date()) {\n        console.log('Google token is expired');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // Check if we have a valid access token\n      if (!(settings !== null && settings !== void 0 && settings.google_access_token)) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // If we have a valid token and the connection is marked as connected, we're good\n      if (settings.google_calendar_connected) {\n        console.log('Google Calendar is connected');\n        setIsGoogleCalendarConnected(true);\n\n        // Fetch calendar events to make sure the connection is working\n        await fetchCalendarEvents();\n      } else {\n        console.log('Google Calendar is not connected');\n        setIsGoogleCalendarConnected(false);\n      }\n    } catch (error) {\n      console.error('Error checking Google Calendar connection:', error);\n      setIsGoogleCalendarConnected(false);\n    }\n  };\n  const connectGoogleCalendar = async () => {\n    try {\n      console.log('Starting Google Calendar connection...');\n\n      // Check if user is authenticated\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Load the Google API client\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n\n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise((resolve, reject) => {\n          window.gapi.load('client', async () => {\n            try {\n              await window.gapi.client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client. Please check your API credentials.');\n      }\n\n      // Use the new Google Identity Services for authentication\n      console.log('Signing in with Google...');\n      try {\n        // Create a token client\n        const tokenClient = window.google.accounts.oauth2.initTokenClient({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          scope: 'https://www.googleapis.com/auth/calendar',\n          callback: async response => {\n            if (response.error) {\n              console.error('Error getting token:', response.error);\n              throw new Error('Failed to get Google token');\n            }\n            console.log('Got Google token:', response);\n\n            // Save the access token to user settings\n            console.log('Saving access token to user settings...');\n            try {\n              // First check if the user settings record exists\n              const {\n                data: existingSettings,\n                error: checkError\n              } = await supabase.from('user_settings').select('*').eq('user_id', user.id).single();\n              if (checkError && checkError.code !== 'PGRST116') {\n                // PGRST116 is \"not found\" error\n                console.error('Error checking user settings:', checkError);\n                throw checkError;\n              }\n\n              // If the record doesn't exist, create it\n              if (!existingSettings) {\n                console.log('Creating new user settings record...');\n                const {\n                  error: createError\n                } = await supabase.from('user_settings').insert({\n                  user_id: user.id,\n                  google_calendar_connected: true,\n                  google_access_token: response.access_token,\n                  google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                });\n                if (createError) {\n                  console.error('Error creating user settings:', createError);\n                  throw createError;\n                }\n              } else {\n                // Update the existing record\n                console.log('Updating existing user settings record...');\n                const {\n                  data: updateData,\n                  error: updateError\n                } = await supabase.from('user_settings').update({\n                  google_calendar_connected: true,\n                  google_access_token: response.access_token,\n                  google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                }).eq('user_id', user.id).select();\n                if (updateError) {\n                  console.error('Error updating user settings:', updateError);\n                  console.error('Error details:', {\n                    code: updateError.code,\n                    message: updateError.message,\n                    details: updateError.details,\n                    hint: updateError.hint\n                  });\n                  throw updateError;\n                }\n                console.log('Update successful:', updateData);\n              }\n              console.log('Google Calendar connected successfully');\n              setIsGoogleCalendarConnected(true);\n\n              // Fetch calendar events\n              await fetchCalendarEvents();\n            } catch (error) {\n              console.error('Error saving Google tokens:', error);\n              alert('Failed to save Google Calendar connection. Please try again.');\n            }\n          },\n          error_callback: error => {\n            console.error('Error in token client:', error);\n            alert('Failed to authenticate with Google. Please try again.');\n          }\n        });\n\n        // Request a token\n        tokenClient.requestAccessToken();\n      } catch (error) {\n        console.error('Error signing in with Google:', error);\n        alert('Failed to sign in with Google. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error connecting to Google Calendar:', error);\n      alert('Failed to connect to Google Calendar. Please try again.');\n    }\n  };\n  const fetchCalendarEvents = async () => {\n    try {\n      console.log('Fetching calendar events...');\n\n      // Check if user is authenticated\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Get user settings\n      const {\n        data: settings,\n        error: settingsError\n      } = await supabase.from('user_settings').select('*').eq('user_id', user.id).single();\n      if (settingsError) {\n        console.error('Error fetching user settings:', settingsError);\n        throw settingsError;\n      }\n      if (!(settings !== null && settings !== void 0 && settings.google_access_token)) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // Check if token is expired\n      const tokenExpiry = new Date(settings.google_token_expiry);\n      if (tokenExpiry < new Date()) {\n        console.log('Google token expired, requesting new token...');\n        setIsGoogleCalendarConnected(false);\n        await connectGoogleCalendar();\n        return;\n      }\n\n      // Ensure Google API client is loaded\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n\n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise((resolve, reject) => {\n          window.gapi.load('client', async () => {\n            try {\n              await window.gapi.client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client');\n      }\n\n      // Set the access token\n      console.log('Setting Google API token...');\n      try {\n        window.gapi.client.setToken({\n          access_token: settings.google_access_token\n        });\n      } catch (error) {\n        console.error('Error setting Google API token:', error);\n        throw new Error('Failed to set Google API token');\n      }\n\n      // Get the current date and date 30 days from now\n      const now = new Date();\n      const thirtyDaysFromNow = new Date();\n      thirtyDaysFromNow.setDate(now.getDate() + 30);\n\n      // Format dates for the API\n      const timeMin = now.toISOString();\n      const timeMax = thirtyDaysFromNow.toISOString();\n\n      // Fetch events from Google Calendar\n      console.log('Fetching events from Google Calendar...');\n      try {\n        const response = await window.gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': timeMin,\n          'timeMax': timeMax,\n          'showDeleted': false,\n          'singleEvents': true,\n          'orderBy': 'startTime'\n        });\n        console.log('Google Calendar API response:', response);\n        if (response.result.items) {\n          const events = response.result.items;\n          console.log('Fetched calendar events:', events);\n\n          // Update scheduled outfits based on event descriptions\n          const updatedSchedules = [...scheduledOutfits];\n          events.forEach(event => {\n            if (event.description) {\n              const outfitIdMatch = event.description.match(/Outfit ID: (\\d+)/);\n              if (outfitIdMatch) {\n                const outfitId = outfitIdMatch[1];\n                const existingScheduleIndex = updatedSchedules.findIndex(schedule => schedule.outfit_id === outfitId && new Date(schedule.date).toISOString().split('T')[0] === new Date(event.start.dateTime).toISOString().split('T')[0]);\n                if (existingScheduleIndex === -1) {\n                  updatedSchedules.push({\n                    id: `temp-${Date.now()}`,\n                    outfit_id: outfitId,\n                    date: new Date(event.start.dateTime).toISOString().split('T')[0],\n                    user_id: user.id,\n                    created_at: new Date().toISOString(),\n                    google_event_id: event.id\n                  });\n                }\n              }\n            }\n          });\n          setScheduledOutfits(updatedSchedules);\n          setCalendarEvents(events);\n          setIsGoogleCalendarConnected(true);\n        } else {\n          console.log('No events found in the specified time range');\n          setCalendarEvents([]);\n        }\n      } catch (error) {\n        console.error('Error fetching calendar events:', error);\n        throw new Error('Failed to fetch calendar events');\n      }\n    } catch (error) {\n      console.error('Error in fetchCalendarEvents:', error);\n      setIsGoogleCalendarConnected(false);\n      setCalendarEvents([]);\n    }\n  };\n  const handleScheduleOutfit = async () => {\n    if (!selectedOutfitForSchedule || !scheduleDate) {\n      alert('Please select an outfit and a date');\n      return;\n    }\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Create outfit schedule in Supabase\n      const {\n        data: scheduleData,\n        error: scheduleError\n      } = await supabase.from('outfit_schedules').insert([{\n        user_id: user.id,\n        outfit_id: selectedOutfitForSchedule.id,\n        date: scheduleDate\n      }]).select().single();\n      if (scheduleError) throw scheduleError;\n\n      // If Google Calendar is connected, create calendar event\n      if (isGoogleCalendarConnected) {\n        try {\n          // Get user's Google Calendar settings\n          const {\n            data: settings\n          } = await supabase.from('user_settings').select('google_access_token').eq('user_id', user.id).single();\n          if (!(settings !== null && settings !== void 0 && settings.google_access_token)) {\n            console.log('No Google access token found');\n            return;\n          }\n\n          // Make sure gapi is loaded and initialized\n          if (typeof window.gapi === 'undefined' || !window.gapi.client) {\n            console.log('Loading Google API...');\n            await new Promise((resolve, reject) => {\n              const script = document.createElement('script');\n              script.src = 'https://apis.google.com/js/api.js';\n              script.onload = () => {\n                window.gapi.load('client', async () => {\n                  try {\n                    await window.gapi.client.init({\n                      apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                      discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n                    });\n                    console.log('Google Calendar API initialized successfully');\n                    resolve(true);\n                  } catch (error) {\n                    reject(error);\n                  }\n                });\n              };\n              script.onerror = reject;\n              document.body.appendChild(script);\n            });\n          }\n\n          // Set the access token for API calls\n          window.gapi.client.setToken({\n            access_token: settings.google_access_token\n          });\n          const event = {\n            'summary': `Outfit: ${selectedOutfitForSchedule.name}`,\n            'description': `outfit_id:${selectedOutfitForSchedule.id}`,\n            'start': {\n              'dateTime': `${scheduleDate}T09:00:00`,\n              'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n            },\n            'end': {\n              'dateTime': `${scheduleDate}T17:00:00`,\n              'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n            }\n          };\n          const response = await window.gapi.client.calendar.events.insert({\n            'calendarId': 'primary',\n            'resource': event\n          });\n\n          // Update outfit schedule with Google Calendar event ID\n          await supabase.from('outfit_schedules').update({\n            google_event_id: response.result.id\n          }).eq('id', scheduleData.id);\n        } catch (error) {\n          console.error('Error creating Google Calendar event:', error);\n          alert('Failed to create Google Calendar event. The outfit was scheduled, but not added to your calendar.');\n        }\n      }\n      setShowScheduleModal(false);\n      setSelectedOutfitForSchedule(null);\n      setScheduleDate('');\n      fetchScheduledOutfits();\n      if (isGoogleCalendarConnected) {\n        fetchCalendarEvents();\n      }\n    } catch (error) {\n      console.error('Error scheduling outfit:', error);\n      alert('Error scheduling outfit. Please try again.');\n    }\n  };\n  const handleDeleteSchedule = async scheduleId => {\n    if (window.confirm('Are you sure you want to remove this outfit from your schedule?')) {\n      try {\n        const {\n          error\n        } = await supabase.from('outfit_schedules').delete().eq('id', scheduleId);\n        if (error) throw error;\n        fetchScheduledOutfits();\n      } catch (error) {\n        console.error('Error deleting scheduled outfit:', error);\n        alert('Error removing outfit from schedule');\n      }\n    }\n  };\n  const getSortedItems = items => {\n    return [...items].sort((a, b) => {\n      const indexA = categoryOrder.indexOf(a.category);\n      const indexB = categoryOrder.indexOf(b.category);\n      return indexA - indexB;\n    });\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const ensureUserSettingsTable = async () => {\n    try {\n      console.log('Ensuring user_settings table has correct structure...');\n\n      // Check if user is authenticated\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // Check if user_settings table exists\n      const {\n        error: tableCheckError\n      } = await supabase.from('user_settings').select('id').limit(1);\n      if (tableCheckError) {\n        console.error('Error checking user_settings table:', tableCheckError);\n        return;\n      }\n\n      // Check if user has a settings record\n      const {\n        data: settings,\n        error: settingsError\n      } = await supabase.from('user_settings').select('*').eq('user_id', user.id).single();\n      if (settingsError) {\n        console.log('User settings record not found, creating one...');\n        const {\n          error: createError\n        } = await supabase.from('user_settings').insert({\n          user_id: user.id,\n          google_calendar_connected: false,\n          google_access_token: null,\n          google_refresh_token: null,\n          google_token_expiry: null\n        });\n        if (createError) {\n          console.error('Error creating user settings:', createError);\n          return;\n        }\n        console.log('User settings record created');\n      } else {\n        console.log('User settings record exists:', settings);\n      }\n    } catch (error) {\n      console.error('Error ensuring user_settings table:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dashboard-title\",\n          children: \"Outfit Planner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"button button-secondary\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outfit-planner-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'planner' ? 'active' : ''}`,\n        onClick: () => setActiveTab('planner'),\n        children: \"Outfit Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'calendar' ? 'active' : ''}`,\n        onClick: () => setActiveTab('calendar'),\n        children: \"Outfit Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }, this), activeTab === 'planner' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outfit-planner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outfit-preview-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Current Outfit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outfit-preview-grid\",\n          children: getSortedItems(selectedItems).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"outfit-preview-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.name || item.category,\n              className: \"outfit-preview-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"outfit-preview-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name || item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 21\n              }, this), item.brand && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-brand\",\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outfit-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRandomize,\n            className: \"button\",\n            children: \"Randomize Outfit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSaveModal(true),\n            disabled: selectedItems.length === 0,\n            className: \"button\",\n            children: \"Save Outfit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clothing-selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Select Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-filters\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: \"form-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 17\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clothing-selection-grid\",\n          children: clothingItems.filter(item => !selectedCategory || item.category === selectedCategory).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `clothing-selection-item ${selectedItems.some(i => i.id === item.id) ? 'selected' : ''}`,\n            onClick: () => handleItemSelect(item),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.name || item.category,\n              className: \"clothing-selection-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clothing-selection-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name || item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 23\n              }, this), item.brand && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-brand\",\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-outfits-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Saved Outfits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saved-outfits-grid\",\n          children: savedOutfits.map(outfit => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saved-outfit-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: outfit.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 19\n            }, this), outfit.occasion && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"outfit-occasion\",\n              children: outfit.occasion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"saved-outfit-preview\",\n              children: getSortedItems(outfit.items).map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image_url,\n                alt: item.name || item.category,\n                className: \"saved-outfit-item-image\"\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"saved-outfit-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectedItems(outfit.items);\n                  window.scrollTo({\n                    top: 0,\n                    behavior: 'smooth'\n                  });\n                },\n                className: \"button button-secondary\",\n                children: \"Load\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectedOutfitForSchedule(outfit);\n                  setShowScheduleModal(true);\n                },\n                className: \"button button-secondary\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteOutfit(outfit.id),\n                className: \"button button-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 19\n            }, this)]\n          }, outfit.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outfit-calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Outfit Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 13\n        }, this), !isGoogleCalendarConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectGoogleCalendar,\n          className: \"button button-secondary\",\n          children: \"Connect Google Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-view-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `button button-secondary ${!showCalendarView ? 'active' : ''}`,\n            onClick: () => setShowCalendarView(false),\n            children: \"List View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `button button-secondary ${showCalendarView ? 'active' : ''}`,\n            onClick: () => setShowCalendarView(true),\n            children: \"Calendar View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 11\n      }, this), showCalendarView ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-view\",\n        children: !isGoogleCalendarConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-items-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please connect your Google Calendar to view your scheduled outfits in calendar view.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connectGoogleCalendar,\n            className: \"button button-secondary\",\n            children: \"Connect Google Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 17\n        }, this) : calendarEvents.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-items-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No upcoming events found in your Google Calendar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Schedule an outfit from the Outfit Planner tab to see it here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 17\n        }, this) : (() => {\n          console.log('Rendering Kanban calendar view with events:', calendarEvents);\n\n          // Group events by date\n          const groupedEvents = calendarEvents.reduce((acc, event) => {\n            const date = new Date(event.start.dateTime).toISOString().split('T')[0];\n            if (!acc[date]) {\n              acc[date] = [];\n            }\n            acc[date].push(event);\n            return acc;\n          }, {});\n          console.log('Grouped events by date:', groupedEvents);\n\n          // Sort dates\n          const sortedDates = Object.keys(groupedEvents).sort();\n          console.log('Sorted dates:', sortedDates);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-calendar-view\",\n            children: sortedDates.map(date => {\n              const events = groupedEvents[date];\n              console.log(`Rendering column for date ${date} with ${events.length} events`);\n\n              // Find the outfit scheduled for this date\n              const outfitSchedule = scheduledOutfits.find(schedule => schedule.date === date);\n              const outfit = outfitSchedule === null || outfitSchedule === void 0 ? void 0 : outfitSchedule.outfit;\n              console.log(`Outfit for date ${date}:`, outfit);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"kanban-day-column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"kanban-day-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: new Date(date).toLocaleDateString('en-US', {\n                      weekday: 'short',\n                      month: 'short',\n                      day: 'numeric'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1165,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1164,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `kanban-outfit-bar ${outfit ? 'has-outfit' : 'no-outfit'}`,\n                  children: outfit ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"outfit-bar-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"outfit-bar-title\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: outfit.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1177,\n                        columnNumber: 35\n                      }, this), outfit.occasion && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"outfit-occasion\",\n                        children: outfit.occasion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1178,\n                        columnNumber: 55\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1176,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"outfit-bar-preview\",\n                      children: getSortedItems(outfit.items).map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: item.image_url,\n                        alt: item.name || item.category,\n                        className: \"outfit-bar-item-image\"\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1182,\n                        columnNumber: 37\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1180,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1175,\n                    columnNumber: 31\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-outfit-message\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No outfit scheduled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1193,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1192,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1173,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"kanban-day-events\",\n                  children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"kanban-event\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-time\",\n                      children: new Date(event.start.dateTime).toLocaleTimeString([], {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1202,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: event.summary\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1209,\n                        columnNumber: 35\n                      }, this), event.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"event-description\",\n                        children: event.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1211,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1208,\n                      columnNumber: 33\n                    }, this)]\n                  }, event.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1201,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1199,\n                  columnNumber: 27\n                }, this)]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 19\n          }, this);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scheduled-outfits-list\",\n        children: scheduledOutfits.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-items-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No outfits scheduled yet. Schedule an outfit from the Outfit Planner tab.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setup-instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Database Setup Required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1230,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"To use the outfit scheduling feature, you need to create the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"outfit_schedules\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 85\n              }, this), \" table in your Supabase database.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1231,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Go to your Supabase dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1233,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Open the SQL Editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Copy and paste the SQL from the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"outfit_schedules.sql\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1235,\n                  columnNumber: 59\n                }, this), \" file\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Run the SQL to create the table and set up the necessary policies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1232,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"After setting up the database, refresh this page and try scheduling an outfit again.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1227,\n          columnNumber: 17\n        }, this) : scheduledOutfits.map(schedule => {\n          var _schedule$outfit, _schedule$outfit2, _schedule$outfit3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scheduled-outfit-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scheduled-outfit-date\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: formatDate(schedule.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scheduled-outfit-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: (_schedule$outfit = schedule.outfit) === null || _schedule$outfit === void 0 ? void 0 : _schedule$outfit.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1248,\n                columnNumber: 23\n              }, this), ((_schedule$outfit2 = schedule.outfit) === null || _schedule$outfit2 === void 0 ? void 0 : _schedule$outfit2.occasion) && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"outfit-occasion\",\n                children: schedule.outfit.occasion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1250,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scheduled-outfit-preview\",\n                children: ((_schedule$outfit3 = schedule.outfit) === null || _schedule$outfit3 === void 0 ? void 0 : _schedule$outfit3.items) && getSortedItems(schedule.outfit.items).map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image_url,\n                  alt: item.name || item.category,\n                  className: \"scheduled-outfit-item-image\"\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1254,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scheduled-outfit-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteSchedule(schedule.id),\n                className: \"button button-danger\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1264,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 21\n            }, this)]\n          }, schedule.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1243,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 9\n    }, this), showSaveModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Save Outfit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Outfit Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: outfitName,\n            onChange: e => setOutfitName(e.target.value),\n            placeholder: \"Enter a name for your outfit\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Occasion (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: outfitOccasion,\n            onChange: e => setOutfitOccasion(e.target.value),\n            placeholder: \"Enter an occasion\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowSaveModal(false);\n              setOutfitName('');\n              setOutfitOccasion('');\n            },\n            className: \"button button-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveOutfit,\n            disabled: !outfitName,\n            className: \"button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1281,\n      columnNumber: 9\n    }, this), showScheduleModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Schedule Outfit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: scheduleDate,\n            onChange: e => setScheduleDate(e.target.value),\n            className: \"form-input\",\n            min: new Date().toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scheduled-outfit-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedOutfitForSchedule === null || selectedOutfitForSchedule === void 0 ? void 0 : selectedOutfitForSchedule.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 15\n          }, this), (selectedOutfitForSchedule === null || selectedOutfitForSchedule === void 0 ? void 0 : selectedOutfitForSchedule.occasion) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"outfit-occasion\",\n            children: selectedOutfitForSchedule.occasion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"outfit-preview-grid\",\n            children: (selectedOutfitForSchedule === null || selectedOutfitForSchedule === void 0 ? void 0 : selectedOutfitForSchedule.items) && getSortedItems(selectedOutfitForSchedule.items).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"outfit-preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image_url,\n                alt: item.name || item.category,\n                className: \"outfit-preview-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1350,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"outfit-preview-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.name || item.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1356,\n                  columnNumber: 23\n                }, this), item.brand && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"item-brand\",\n                  children: item.brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1357,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1355,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1349,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowScheduleModal(false);\n              setSelectedOutfitForSchedule(null);\n              setScheduleDate('');\n            },\n            className: \"button button-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleScheduleOutfit,\n            disabled: !scheduleDate,\n            className: \"button\",\n            children: \"Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 946,\n    columnNumber: 5\n  }, this);\n};\n_s(OutfitPlanner, \"4awb9sR/BrZV0vm2arYiuv+l4B4=\", false, function () {\n  return [useNavigate];\n});\n_c = OutfitPlanner;\nexport default OutfitPlanner;\nvar _c;\n$RefreshReg$(_c, \"OutfitPlanner\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","OutfitPlanner","_s","navigate","clothingItems","setClothingItems","selectedItems","setSelectedItems","savedOutfits","setSavedOutfits","showSaveModal","setShowSaveModal","outfitName","setOutfitName","outfitOccasion","setOutfitOccasion","selectedCategory","setSelectedCategory","scheduledOutfits","setScheduledOutfits","showScheduleModal","setShowScheduleModal","selectedOutfitForSchedule","setSelectedOutfitForSchedule","scheduleDate","setScheduleDate","isGoogleCalendarConnected","setIsGoogleCalendarConnected","activeTab","setActiveTab","calendarEvents","setCalendarEvents","showCalendarView","setShowCalendarView","categories","categoryOrder","fetchClothingItems","fetchSavedOutfits","checkOutfitSchedulesTable","fetchScheduledOutfits","ensureUserSettingsTable","checkGoogleCalendarConnection","data","user","auth","getUser","Error","error","from","select","eq","id","console","order","ascending","outfitsWithItems","Promise","all","map","outfit","items","in","log","tableCheckError","limit","schedules","schedulesError","length","outfitIds","schedule","outfit_id","outfits","outfitsError","outfitItemsMap","Map","itemsError","set","schedulesWithOutfits","find","o","get","code","createOutfitSchedulesTable","alert","handleRandomize","newSelectedItems","usedCategories","Set","shuffledItems","sort","Math","random","item","has","category","push","add","handleItemSelect","filteredItems","filter","i","handleSaveOutfit","user_id","name","occasion","insert","message","handleDeleteOutfit","outfitId","window","confirm","delete","settings","settingsError","single","google_token_expiry","Date","google_access_token","google_calendar_connected","fetchCalendarEvents","connectGoogleCalendar","gapi","resolve","reject","script","document","createElement","src","onload","onerror","body","appendChild","load","client","init","apiKey","process","env","REACT_APP_GOOGLE_API_KEY","discoveryDocs","tokenClient","google","accounts","oauth2","initTokenClient","client_id","REACT_APP_GOOGLE_CLIENT_ID","scope","callback","response","existingSettings","checkError","createError","access_token","now","expires_in","toISOString","updateData","updateError","update","details","hint","error_callback","requestAccessToken","tokenExpiry","setToken","thirtyDaysFromNow","setDate","getDate","timeMin","timeMax","calendar","events","list","result","updatedSchedules","forEach","event","description","outfitIdMatch","match","existingScheduleIndex","findIndex","date","split","start","dateTime","created_at","google_event_id","handleScheduleOutfit","scheduleData","scheduleError","Intl","DateTimeFormat","resolvedOptions","timeZone","handleDeleteSchedule","scheduleId","getSortedItems","a","b","indexA","indexOf","indexB","formatDate","dateString","toLocaleDateString","weekday","year","month","day","google_refresh_token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","image_url","alt","brand","disabled","value","onChange","e","target","some","scrollTo","top","behavior","groupedEvents","reduce","acc","sortedDates","Object","keys","outfitSchedule","toLocaleTimeString","hour","minute","summary","_schedule$outfit","_schedule$outfit2","_schedule$outfit3","type","placeholder","min","_c","$RefreshReg$"],"sources":["/Users/adlyazim/Documents/GitHub/ENTI674-Team3-FinalProject/client/src/pages/OutfitPlanner.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/main.css';\n\ninterface ClothingItem {\n  id: string;\n  image_url: string;\n  name: string | null;\n  brand: string | null;\n  category: string;\n  color: string;\n  occasion: string;\n}\n\ninterface Outfit {\n  id: string;\n  name: string;\n  occasion: string | null;\n  items: ClothingItem[];\n  created_at: string;\n}\n\ninterface OutfitSchedule {\n  id: string;\n  outfit_id: string;\n  date: string;\n  user_id: string;\n  created_at: string;\n  outfit?: Outfit;\n  google_event_id?: string;\n}\n\ninterface GoogleCalendarEvent {\n  id: string;\n  summary: string;\n  description?: string;\n  start: {\n    dateTime: string;\n    timeZone: string;\n  };\n  end: {\n    dateTime: string;\n    timeZone: string;\n  };\n}\n\nconst OutfitPlanner: React.FC = () => {\n  const navigate = useNavigate();\n  const [clothingItems, setClothingItems] = useState<ClothingItem[]>([]);\n  const [selectedItems, setSelectedItems] = useState<ClothingItem[]>([]);\n  const [savedOutfits, setSavedOutfits] = useState<Outfit[]>([]);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [outfitName, setOutfitName] = useState('');\n  const [outfitOccasion, setOutfitOccasion] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [scheduledOutfits, setScheduledOutfits] = useState<OutfitSchedule[]>([]);\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [selectedOutfitForSchedule, setSelectedOutfitForSchedule] = useState<Outfit | null>(null);\n  const [scheduleDate, setScheduleDate] = useState('');\n  const [isGoogleCalendarConnected, setIsGoogleCalendarConnected] = useState(false);\n  const [activeTab, setActiveTab] = useState<'planner' | 'calendar'>('planner');\n  const [calendarEvents, setCalendarEvents] = useState<GoogleCalendarEvent[]>([]);\n  const [showCalendarView, setShowCalendarView] = useState(false);\n\n  const categories = [\n    'Jacket',\n    'Shirt',\n    'T-Shirt',\n    'Sweater',\n    'Dress',\n    'Skirt',\n    'Pants',\n    'Shorts',\n    'Jeans',\n    'Shoes',\n    'Accessories',\n  ];\n\n  const categoryOrder = [\n    'Headwear',\n    'Jacket',\n    'Shirt',\n    'T-Shirt',\n    'Sweater',\n    'Dress',\n    'Skirt',\n    'Pants',\n    'Shorts',\n    'Jeans',\n    'Shoes',\n    'Accessories'\n  ];\n\n  useEffect(() => {\n    fetchClothingItems();\n    fetchSavedOutfits();\n    checkOutfitSchedulesTable();\n    fetchScheduledOutfits();\n    ensureUserSettingsTable();\n    checkGoogleCalendarConnection();\n  }, []);\n\n  const fetchClothingItems = async () => {\n    try {\n      // Get the current user's ID\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      const { data, error } = await supabase\n        .from('clothing_items')\n        .select('*')\n        .eq('user_id', user.id);\n\n      if (error) throw error;\n      if (data) setClothingItems(data);\n    } catch (error) {\n      console.error('Error fetching clothing items:', error);\n    }\n  };\n\n  const fetchSavedOutfits = async () => {\n    try {\n      // Get the current user's ID\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      const { data, error } = await supabase\n        .from('outfits')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      if (data) {\n        // Fetch the actual clothing items for each outfit\n        const outfitsWithItems = await Promise.all(\n          data.map(async (outfit) => {\n            const { data: items } = await supabase\n              .from('clothing_items')\n              .select('*')\n              .in('id', outfit.items);\n            return {\n              ...outfit,\n              items: items || [],\n            };\n          })\n        );\n        setSavedOutfits(outfitsWithItems);\n      }\n    } catch (error) {\n      console.error('Error fetching saved outfits:', error);\n    }\n  };\n\n  const fetchScheduledOutfits = async () => {\n    try {\n      console.log('Fetching scheduled outfits...');\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // First check if the outfit_schedules table exists\n      const { error: tableCheckError } = await supabase\n        .from('outfit_schedules')\n        .select('id')\n        .limit(1);\n      \n      if (tableCheckError) {\n        console.log('Outfit schedules table may not exist yet:', tableCheckError);\n        return;\n      }\n\n      // Fetch scheduled outfits with outfit details\n      const { data: schedules, error: schedulesError } = await supabase\n        .from('outfit_schedules')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('date', { ascending: true });\n\n      if (schedulesError) {\n        console.error('Error fetching scheduled outfits:', schedulesError);\n        return;\n      }\n\n      console.log('Fetched scheduled outfits:', schedules);\n\n      if (schedules && schedules.length > 0) {\n        // Fetch outfit details for each schedule\n        const outfitIds = schedules.map(schedule => schedule.outfit_id);\n        const { data: outfits, error: outfitsError } = await supabase\n          .from('outfits')\n          .select('*')\n          .in('id', outfitIds);\n\n        if (outfitsError) {\n          console.error('Error fetching outfit details:', outfitsError);\n          return;\n        }\n\n        console.log('Fetched outfit details:', outfits);\n\n        // Fetch clothing items for each outfit\n        const outfitItemsMap = new Map();\n        for (const outfit of outfits) {\n          const { data: items, error: itemsError } = await supabase\n            .from('clothing_items')\n            .select('*')\n            .in('id', outfit.items);\n\n          if (itemsError) {\n            console.error(`Error fetching items for outfit ${outfit.id}:`, itemsError);\n            continue;\n          }\n\n          outfitItemsMap.set(outfit.id, items);\n        }\n\n        console.log('Fetched clothing items for outfits:', outfitItemsMap);\n\n        // Combine schedules with outfit details and items\n        const schedulesWithOutfits = schedules.map(schedule => {\n          const outfit = outfits.find(o => o.id === schedule.outfit_id);\n          if (outfit) {\n            const items = outfitItemsMap.get(outfit.id) || [];\n            return {\n              ...schedule,\n              outfit: {\n                ...outfit,\n                items\n              }\n            };\n          }\n          return schedule;\n        });\n\n        console.log('Combined schedules with outfits:', schedulesWithOutfits);\n        setScheduledOutfits(schedulesWithOutfits);\n      } else {\n        console.log('No scheduled outfits found');\n        setScheduledOutfits([]);\n      }\n    } catch (error) {\n      console.error('Error in fetchScheduledOutfits:', error);\n    }\n  };\n\n  const checkOutfitSchedulesTable = async () => {\n    try {\n      // Try to query the table to see if it exists\n      const { error } = await supabase\n        .from('outfit_schedules')\n        .select('id')\n        .limit(1);\n      \n      if (error) {\n        console.error('Error checking outfit_schedules table:', error);\n        \n        // If the error indicates the table doesn't exist, create it\n        if (error.code === '42P01') { // PostgreSQL error code for undefined_table\n          console.log('Creating outfit_schedules table...');\n          await createOutfitSchedulesTable();\n        }\n      } else {\n        console.log('outfit_schedules table exists');\n      }\n    } catch (error) {\n      console.error('Error in checkOutfitSchedulesTable:', error);\n    }\n  };\n\n  const createOutfitSchedulesTable = async () => {\n    try {\n      // This is a simplified approach - in a real app, you'd use migrations\n      // or have the table created by your backend\n      console.log('This feature requires the outfit_schedules table to be created in Supabase.');\n      console.log('Please run the SQL in the outfit_schedules.sql file in your Supabase SQL editor.');\n      \n      // Show a more user-friendly message\n      alert('The outfit scheduling feature requires database setup. Please contact the administrator.');\n    } catch (error) {\n      console.error('Error creating outfit_schedules table:', error);\n    }\n  };\n\n  const handleRandomize = () => {\n    const newSelectedItems: ClothingItem[] = [];\n    const usedCategories = new Set<string>();\n\n    // Shuffle the clothing items\n    const shuffledItems = [...clothingItems].sort(() => Math.random() - 0.5);\n\n    // Select one item from each category\n    for (const item of shuffledItems) {\n      if (!usedCategories.has(item.category)) {\n        newSelectedItems.push(item);\n        usedCategories.add(item.category);\n      }\n    }\n\n    setSelectedItems(newSelectedItems);\n  };\n\n  const handleItemSelect = (item: ClothingItem) => {\n    // Remove any existing item of the same category\n    const filteredItems = selectedItems.filter(i => i.category !== item.category);\n    setSelectedItems([...filteredItems, item]);\n  };\n\n  const handleSaveOutfit = async () => {\n    if (!outfitName || selectedItems.length === 0) {\n      alert('Please provide a name for the outfit and select at least one item');\n      return;\n    }\n\n    try {\n      // Get the current user's ID\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      console.log('Saving outfit with data:', {\n        user_id: user.id,\n        name: outfitName,\n        occasion: outfitOccasion || null,\n        items: selectedItems.map(item => item.id)\n      });\n\n      const { data, error } = await supabase\n        .from('outfits')\n        .insert([\n          {\n            user_id: user.id,\n            name: outfitName,\n            occasion: outfitOccasion || null,\n            items: selectedItems.map(item => item.id),\n          },\n        ])\n        .select();\n\n      if (error) {\n        console.error('Supabase error details:', error);\n        throw error;\n      }\n\n      console.log('Successfully saved outfit:', data);\n\n      setShowSaveModal(false);\n      setOutfitName('');\n      setOutfitOccasion('');\n      fetchSavedOutfits();\n    } catch (error) {\n      console.error('Error saving outfit:', error);\n      if (error instanceof Error) {\n        alert(`Error saving outfit: ${error.message}`);\n      } else {\n        alert('Error saving outfit. Please check the console for details.');\n      }\n    }\n  };\n\n  const handleDeleteOutfit = async (outfitId: string) => {\n    if (window.confirm('Are you sure you want to delete this outfit?')) {\n      try {\n        const { error } = await supabase\n          .from('outfits')\n          .delete()\n          .eq('id', outfitId);\n\n        if (error) throw error;\n        fetchSavedOutfits();\n      } catch (error) {\n        console.error('Error deleting outfit:', error);\n        alert('Error deleting outfit');\n      }\n    }\n  };\n\n  const checkGoogleCalendarConnection = async () => {\n    try {\n      console.log('Checking Google Calendar connection...');\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n\n      // Check if user has Google Calendar connected\n      const { data: settings, error: settingsError } = await supabase\n        .from('user_settings')\n        .select('google_calendar_connected, google_access_token, google_token_expiry')\n        .eq('user_id', user.id)\n        .single();\n\n      if (settingsError) {\n        console.error('Error checking user settings:', settingsError);\n        return;\n      }\n\n      console.log('User settings for Google Calendar:', settings);\n\n      // Check if the token is expired\n      if (settings?.google_token_expiry && new Date(settings.google_token_expiry) < new Date()) {\n        console.log('Google token is expired');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // Check if we have a valid access token\n      if (!settings?.google_access_token) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n\n      // If we have a valid token and the connection is marked as connected, we're good\n      if (settings.google_calendar_connected) {\n        console.log('Google Calendar is connected');\n        setIsGoogleCalendarConnected(true);\n        \n        // Fetch calendar events to make sure the connection is working\n        await fetchCalendarEvents();\n      } else {\n        console.log('Google Calendar is not connected');\n        setIsGoogleCalendarConnected(false);\n      }\n    } catch (error) {\n      console.error('Error checking Google Calendar connection:', error);\n      setIsGoogleCalendarConnected(false);\n    }\n  };\n\n  const connectGoogleCalendar = async () => {\n    try {\n      console.log('Starting Google Calendar connection...');\n      \n      // Check if user is authenticated\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      \n      // Load the Google API client\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n      \n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise<void>((resolve, reject) => {\n          (window.gapi as any).load('client', async () => {\n            try {\n              await (window.gapi as any).client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client. Please check your API credentials.');\n      }\n      \n      // Use the new Google Identity Services for authentication\n      console.log('Signing in with Google...');\n      try {\n        // Create a token client\n        const tokenClient = (window.google as any).accounts.oauth2.initTokenClient({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          scope: 'https://www.googleapis.com/auth/calendar',\n          callback: async (response: any) => {\n            if (response.error) {\n              console.error('Error getting token:', response.error);\n              throw new Error('Failed to get Google token');\n            }\n            \n            console.log('Got Google token:', response);\n            \n            // Save the access token to user settings\n            console.log('Saving access token to user settings...');\n            try {\n              // First check if the user settings record exists\n              const { data: existingSettings, error: checkError } = await supabase\n                .from('user_settings')\n                .select('*')\n                .eq('user_id', user.id)\n                .single();\n              \n              if (checkError && checkError.code !== 'PGRST116') { // PGRST116 is \"not found\" error\n                console.error('Error checking user settings:', checkError);\n                throw checkError;\n              }\n              \n              // If the record doesn't exist, create it\n              if (!existingSettings) {\n                console.log('Creating new user settings record...');\n                const { error: createError } = await supabase\n                  .from('user_settings')\n                  .insert({\n                    user_id: user.id,\n                    google_calendar_connected: true,\n                    google_access_token: response.access_token,\n                    google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                  });\n                \n                if (createError) {\n                  console.error('Error creating user settings:', createError);\n                  throw createError;\n                }\n              } else {\n                // Update the existing record\n                console.log('Updating existing user settings record...');\n                const { data: updateData, error: updateError } = await supabase\n                  .from('user_settings')\n                  .update({\n                    google_calendar_connected: true,\n                    google_access_token: response.access_token,\n                    google_token_expiry: new Date(Date.now() + response.expires_in * 1000).toISOString()\n                  })\n                  .eq('user_id', user.id)\n                  .select();\n                \n                if (updateError) {\n                  console.error('Error updating user settings:', updateError);\n                  console.error('Error details:', {\n                    code: updateError.code,\n                    message: updateError.message,\n                    details: updateError.details,\n                    hint: updateError.hint\n                  });\n                  throw updateError;\n                }\n                \n                console.log('Update successful:', updateData);\n              }\n              \n              console.log('Google Calendar connected successfully');\n              setIsGoogleCalendarConnected(true);\n              \n              // Fetch calendar events\n              await fetchCalendarEvents();\n            } catch (error) {\n              console.error('Error saving Google tokens:', error);\n              alert('Failed to save Google Calendar connection. Please try again.');\n            }\n          },\n          error_callback: (error: any) => {\n            console.error('Error in token client:', error);\n            alert('Failed to authenticate with Google. Please try again.');\n          }\n        });\n        \n        // Request a token\n        tokenClient.requestAccessToken();\n      } catch (error) {\n        console.error('Error signing in with Google:', error);\n        alert('Failed to sign in with Google. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error connecting to Google Calendar:', error);\n      alert('Failed to connect to Google Calendar. Please try again.');\n    }\n  };\n\n  const fetchCalendarEvents = async () => {\n    try {\n      console.log('Fetching calendar events...');\n      \n      // Check if user is authenticated\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n      \n      // Get user settings\n      const { data: settings, error: settingsError } = await supabase\n        .from('user_settings')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n      \n      if (settingsError) {\n        console.error('Error fetching user settings:', settingsError);\n        throw settingsError;\n      }\n      \n      if (!settings?.google_access_token) {\n        console.log('No Google access token found');\n        setIsGoogleCalendarConnected(false);\n        return;\n      }\n      \n      // Check if token is expired\n      const tokenExpiry = new Date(settings.google_token_expiry);\n      if (tokenExpiry < new Date()) {\n        console.log('Google token expired, requesting new token...');\n        setIsGoogleCalendarConnected(false);\n        await connectGoogleCalendar();\n        return;\n      }\n      \n      // Ensure Google API client is loaded\n      if (typeof window.gapi === 'undefined') {\n        console.log('Loading Google API script...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      }\n      \n      // Initialize the Google API client\n      console.log('Initializing Google API client...');\n      try {\n        await new Promise<void>((resolve, reject) => {\n          (window.gapi as any).load('client', async () => {\n            try {\n              await (window.gapi as any).client.init({\n                apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n              });\n              console.log('Google API client initialized successfully');\n              resolve();\n            } catch (error) {\n              console.error('Error initializing Google API client:', error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error loading Google API client:', error);\n        throw new Error('Failed to initialize Google API client');\n      }\n      \n      // Set the access token\n      console.log('Setting Google API token...');\n      try {\n        (window.gapi as any).client.setToken({\n          access_token: settings.google_access_token\n        });\n      } catch (error) {\n        console.error('Error setting Google API token:', error);\n        throw new Error('Failed to set Google API token');\n      }\n      \n      // Get the current date and date 30 days from now\n      const now = new Date();\n      const thirtyDaysFromNow = new Date();\n      thirtyDaysFromNow.setDate(now.getDate() + 30);\n      \n      // Format dates for the API\n      const timeMin = now.toISOString();\n      const timeMax = thirtyDaysFromNow.toISOString();\n      \n      // Fetch events from Google Calendar\n      console.log('Fetching events from Google Calendar...');\n      try {\n        const response = await (window.gapi as any).client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': timeMin,\n          'timeMax': timeMax,\n          'showDeleted': false,\n          'singleEvents': true,\n          'orderBy': 'startTime'\n        });\n        \n        console.log('Google Calendar API response:', response);\n        \n        if (response.result.items) {\n          const events = response.result.items;\n          console.log('Fetched calendar events:', events);\n          \n          // Update scheduled outfits based on event descriptions\n          const updatedSchedules = [...scheduledOutfits];\n          events.forEach((event: GoogleCalendarEvent) => {\n            if (event.description) {\n              const outfitIdMatch = event.description.match(/Outfit ID: (\\d+)/);\n              if (outfitIdMatch) {\n                const outfitId = outfitIdMatch[1];\n                const existingScheduleIndex = updatedSchedules.findIndex(\n                  schedule => schedule.outfit_id === outfitId && \n                  new Date(schedule.date).toISOString().split('T')[0] === \n                  new Date(event.start.dateTime).toISOString().split('T')[0]\n                );\n                \n                if (existingScheduleIndex === -1) {\n                  updatedSchedules.push({\n                    id: `temp-${Date.now()}`,\n                    outfit_id: outfitId,\n                    date: new Date(event.start.dateTime).toISOString().split('T')[0],\n                    user_id: user.id,\n                    created_at: new Date().toISOString(),\n                    google_event_id: event.id\n                  });\n                }\n              }\n            }\n          });\n          \n          setScheduledOutfits(updatedSchedules);\n          setCalendarEvents(events);\n          setIsGoogleCalendarConnected(true);\n        } else {\n          console.log('No events found in the specified time range');\n          setCalendarEvents([]);\n        }\n      } catch (error) {\n        console.error('Error fetching calendar events:', error);\n        throw new Error('Failed to fetch calendar events');\n      }\n    } catch (error) {\n      console.error('Error in fetchCalendarEvents:', error);\n      setIsGoogleCalendarConnected(false);\n      setCalendarEvents([]);\n    }\n  };\n\n  const handleScheduleOutfit = async () => {\n    if (!selectedOutfitForSchedule || !scheduleDate) {\n      alert('Please select an outfit and a date');\n      return;\n    }\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error('No authenticated user found');\n      }\n\n      // Create outfit schedule in Supabase\n      const { data: scheduleData, error: scheduleError } = await supabase\n        .from('outfit_schedules')\n        .insert([\n          {\n            user_id: user.id,\n            outfit_id: selectedOutfitForSchedule.id,\n            date: scheduleDate,\n          },\n        ])\n        .select()\n        .single();\n\n      if (scheduleError) throw scheduleError;\n\n      // If Google Calendar is connected, create calendar event\n      if (isGoogleCalendarConnected) {\n        try {\n          // Get user's Google Calendar settings\n          const { data: settings } = await supabase\n            .from('user_settings')\n            .select('google_access_token')\n            .eq('user_id', user.id)\n            .single();\n\n          if (!settings?.google_access_token) {\n            console.log('No Google access token found');\n            return;\n          }\n\n          // Make sure gapi is loaded and initialized\n          if (typeof window.gapi === 'undefined' || !window.gapi.client) {\n            console.log('Loading Google API...');\n            await new Promise((resolve, reject) => {\n              const script = document.createElement('script');\n              script.src = 'https://apis.google.com/js/api.js';\n              script.onload = () => {\n                (window.gapi as any).load('client', async () => {\n                  try {\n                    await (window.gapi as any).client.init({\n                      apiKey: process.env.REACT_APP_GOOGLE_API_KEY as string,\n                      discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],\n                    });\n                    console.log('Google Calendar API initialized successfully');\n                    resolve(true);\n                  } catch (error) {\n                    reject(error);\n                  }\n                });\n              };\n              script.onerror = reject;\n              document.body.appendChild(script);\n            });\n          }\n\n          // Set the access token for API calls\n          (window.gapi as any).client.setToken({\n            access_token: settings.google_access_token\n          });\n\n          const event = {\n            'summary': `Outfit: ${selectedOutfitForSchedule.name}`,\n            'description': `outfit_id:${selectedOutfitForSchedule.id}`,\n            'start': {\n              'dateTime': `${scheduleDate}T09:00:00`,\n              'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone,\n            },\n            'end': {\n              'dateTime': `${scheduleDate}T17:00:00`,\n              'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone,\n            },\n          };\n\n          const response = await window.gapi.client.calendar.events.insert({\n            'calendarId': 'primary',\n            'resource': event,\n          });\n\n          // Update outfit schedule with Google Calendar event ID\n          await supabase\n            .from('outfit_schedules')\n            .update({ google_event_id: response.result.id })\n            .eq('id', scheduleData.id);\n        } catch (error) {\n          console.error('Error creating Google Calendar event:', error);\n          alert('Failed to create Google Calendar event. The outfit was scheduled, but not added to your calendar.');\n        }\n      }\n\n      setShowScheduleModal(false);\n      setSelectedOutfitForSchedule(null);\n      setScheduleDate('');\n      fetchScheduledOutfits();\n      if (isGoogleCalendarConnected) {\n        fetchCalendarEvents();\n      }\n    } catch (error) {\n      console.error('Error scheduling outfit:', error);\n      alert('Error scheduling outfit. Please try again.');\n    }\n  };\n\n  const handleDeleteSchedule = async (scheduleId: string) => {\n    if (window.confirm('Are you sure you want to remove this outfit from your schedule?')) {\n      try {\n        const { error } = await supabase\n          .from('outfit_schedules')\n          .delete()\n          .eq('id', scheduleId);\n\n        if (error) throw error;\n        fetchScheduledOutfits();\n      } catch (error) {\n        console.error('Error deleting scheduled outfit:', error);\n        alert('Error removing outfit from schedule');\n      }\n    }\n  };\n\n  const getSortedItems = (items: ClothingItem[]) => {\n    return [...items].sort((a, b) => {\n      const indexA = categoryOrder.indexOf(a.category);\n      const indexB = categoryOrder.indexOf(b.category);\n      return indexA - indexB;\n    });\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      weekday: 'long', \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n  };\n\n  const ensureUserSettingsTable = async () => {\n    try {\n      console.log('Ensuring user_settings table has correct structure...');\n      \n      // Check if user is authenticated\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.log('No authenticated user found');\n        return;\n      }\n      \n      // Check if user_settings table exists\n      const { error: tableCheckError } = await supabase\n        .from('user_settings')\n        .select('id')\n        .limit(1);\n      \n      if (tableCheckError) {\n        console.error('Error checking user_settings table:', tableCheckError);\n        return;\n      }\n      \n      // Check if user has a settings record\n      const { data: settings, error: settingsError } = await supabase\n        .from('user_settings')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n      \n      if (settingsError) {\n        console.log('User settings record not found, creating one...');\n        const { error: createError } = await supabase\n          .from('user_settings')\n          .insert({\n            user_id: user.id,\n            google_calendar_connected: false,\n            google_access_token: null,\n            google_refresh_token: null,\n            google_token_expiry: null\n          });\n          \n        if (createError) {\n          console.error('Error creating user settings:', createError);\n          return;\n        }\n        \n        console.log('User settings record created');\n      } else {\n        console.log('User settings record exists:', settings);\n      }\n    } catch (error) {\n      console.error('Error ensuring user_settings table:', error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <div className=\"header-content\">\n          <h1 className=\"dashboard-title\">Outfit Planner</h1>\n        </div>\n        <button onClick={() => navigate('/')} className=\"button button-secondary\">\n          Back to Dashboard\n        </button>\n      </div>\n\n      <div className=\"outfit-planner-tabs\">\n        <button \n          className={`tab-button ${activeTab === 'planner' ? 'active' : ''}`}\n          onClick={() => setActiveTab('planner')}\n        >\n          Outfit Planner\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'calendar' ? 'active' : ''}`}\n          onClick={() => setActiveTab('calendar')}\n        >\n          Outfit Calendar\n        </button>\n      </div>\n\n      {activeTab === 'planner' ? (\n        <div className=\"outfit-planner-container\">\n          <div className=\"outfit-preview-section\">\n            <h2 className=\"section-title\">Current Outfit</h2>\n            <div className=\"outfit-preview-grid\">\n              {getSortedItems(selectedItems).map((item) => (\n                <div key={item.id} className=\"outfit-preview-item\">\n                  <img\n                    src={item.image_url}\n                    alt={item.name || item.category}\n                    className=\"outfit-preview-image\"\n                  />\n                  <div className=\"outfit-preview-details\">\n                    <h3>{item.name || item.category}</h3>\n                    {item.brand && <p className=\"item-brand\">{item.brand}</p>}\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"outfit-actions\">\n              <button onClick={handleRandomize} className=\"button\">\n                Randomize Outfit\n              </button>\n              <button\n                onClick={() => setShowSaveModal(true)}\n                disabled={selectedItems.length === 0}\n                className=\"button\"\n              >\n                Save Outfit\n              </button>\n            </div>\n          </div>\n\n          <div className=\"clothing-selection-section\">\n            <h2 className=\"section-title\">Select Items</h2>\n            <div className=\"category-filters\">\n              <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                className=\"form-select\"\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map(category => (\n                  <option key={category} value={category}>{category}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"clothing-selection-grid\">\n              {clothingItems\n                .filter(item => !selectedCategory || item.category === selectedCategory)\n                .map((item) => (\n                  <div\n                    key={item.id}\n                    className={`clothing-selection-item ${\n                      selectedItems.some(i => i.id === item.id) ? 'selected' : ''\n                    }`}\n                    onClick={() => handleItemSelect(item)}\n                  >\n                    <img\n                      src={item.image_url}\n                      alt={item.name || item.category}\n                      className=\"clothing-selection-image\"\n                    />\n                    <div className=\"clothing-selection-details\">\n                      <h3>{item.name || item.category}</h3>\n                      {item.brand && <p className=\"item-brand\">{item.brand}</p>}\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n\n          <div className=\"saved-outfits-section\">\n            <h2 className=\"section-title\">Saved Outfits</h2>\n            <div className=\"saved-outfits-grid\">\n              {savedOutfits.map((outfit) => (\n                <div key={outfit.id} className=\"saved-outfit-card\">\n                  <h3>{outfit.name}</h3>\n                  {outfit.occasion && <p className=\"outfit-occasion\">{outfit.occasion}</p>}\n                  <div className=\"saved-outfit-preview\">\n                    {getSortedItems(outfit.items).map((item) => (\n                      <img\n                        key={item.id}\n                        src={item.image_url}\n                        alt={item.name || item.category}\n                        className=\"saved-outfit-item-image\"\n                      />\n                    ))}\n                  </div>\n                  <div className=\"saved-outfit-actions\">\n                    <button\n                      onClick={() => {\n                        setSelectedItems(outfit.items);\n                        window.scrollTo({ top: 0, behavior: 'smooth' });\n                      }}\n                      className=\"button button-secondary\"\n                    >\n                      Load\n                    </button>\n                    <button\n                      onClick={() => {\n                        setSelectedOutfitForSchedule(outfit);\n                        setShowScheduleModal(true);\n                      }}\n                      className=\"button button-secondary\"\n                    >\n                      Schedule\n                    </button>\n                    <button\n                      onClick={() => handleDeleteOutfit(outfit.id)}\n                      className=\"button button-danger\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"outfit-calendar-container\">\n          <div className=\"calendar-header\">\n            <h2 className=\"section-title\">Outfit Calendar</h2>\n            {!isGoogleCalendarConnected && (\n              <button onClick={connectGoogleCalendar} className=\"button button-secondary\">\n                Connect Google Calendar\n              </button>\n            )}\n            <div className=\"calendar-view-toggle\">\n              <button \n                className={`button button-secondary ${!showCalendarView ? 'active' : ''}`}\n                onClick={() => setShowCalendarView(false)}\n              >\n                List View\n              </button>\n              <button \n                className={`button button-secondary ${showCalendarView ? 'active' : ''}`}\n                onClick={() => setShowCalendarView(true)}\n              >\n                Calendar View\n              </button>\n            </div>\n          </div>\n          \n          {showCalendarView ? (\n            <div className=\"calendar-view\">\n              {!isGoogleCalendarConnected ? (\n                <div className=\"no-items-message\">\n                  <p>Please connect your Google Calendar to view your scheduled outfits in calendar view.</p>\n                  <button onClick={connectGoogleCalendar} className=\"button button-secondary\">\n                    Connect Google Calendar\n                  </button>\n                </div>\n              ) : calendarEvents.length === 0 ? (\n                <div className=\"no-items-message\">\n                  <p>No upcoming events found in your Google Calendar.</p>\n                  <p>Schedule an outfit from the Outfit Planner tab to see it here.</p>\n                </div>\n              ) : (() => {\n                console.log('Rendering Kanban calendar view with events:', calendarEvents);\n                \n                // Group events by date\n                const groupedEvents = calendarEvents.reduce((acc, event) => {\n                  const date = new Date(event.start.dateTime).toISOString().split('T')[0];\n                  if (!acc[date]) {\n                    acc[date] = [];\n                  }\n                  acc[date].push(event);\n                  return acc;\n                }, {} as Record<string, GoogleCalendarEvent[]>);\n                \n                console.log('Grouped events by date:', groupedEvents);\n                \n                // Sort dates\n                const sortedDates = Object.keys(groupedEvents).sort();\n                console.log('Sorted dates:', sortedDates);\n                \n                return (\n                  <div className=\"kanban-calendar-view\">\n                    {sortedDates.map((date) => {\n                      const events = groupedEvents[date];\n                      console.log(`Rendering column for date ${date} with ${events.length} events`);\n                      \n                      // Find the outfit scheduled for this date\n                      const outfitSchedule = scheduledOutfits.find(\n                        schedule => schedule.date === date\n                      );\n                      const outfit = outfitSchedule?.outfit;\n                      console.log(`Outfit for date ${date}:`, outfit);\n                      \n                      return (\n                        <div key={date} className=\"kanban-day-column\">\n                          <div className=\"kanban-day-header\">\n                            <h3>{new Date(date).toLocaleDateString('en-US', { \n                              weekday: 'short', \n                              month: 'short', \n                              day: 'numeric' \n                            })}</h3>\n                          </div>\n                          \n                          {/* Outfit bar at the top */}\n                          <div className={`kanban-outfit-bar ${outfit ? 'has-outfit' : 'no-outfit'}`}>\n                            {outfit ? (\n                              <div className=\"outfit-bar-content\">\n                                <div className=\"outfit-bar-title\">\n                                  <h4>{outfit.name}</h4>\n                                  {outfit.occasion && <span className=\"outfit-occasion\">{outfit.occasion}</span>}\n                                </div>\n                                <div className=\"outfit-bar-preview\">\n                                  {getSortedItems(outfit.items).map((item) => (\n                                    <img\n                                      key={item.id}\n                                      src={item.image_url}\n                                      alt={item.name || item.category}\n                                      className=\"outfit-bar-item-image\"\n                                    />\n                                  ))}\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"no-outfit-message\">\n                                <p>No outfit scheduled</p>\n                              </div>\n                            )}\n                          </div>\n                          \n                          {/* Events for this day */}\n                          <div className=\"kanban-day-events\">\n                            {events.map((event) => (\n                              <div key={event.id} className=\"kanban-event\">\n                                <div className=\"event-time\">\n                                  {new Date(event.start.dateTime).toLocaleTimeString([], { \n                                    hour: '2-digit', \n                                    minute: '2-digit' \n                                  })}\n                                </div>\n                                <div className=\"event-content\">\n                                  <h4>{event.summary}</h4>\n                                  {event.description && (\n                                    <p className=\"event-description\">{event.description}</p>\n                                  )}\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })()}\n            </div>\n          ) : (\n            <div className=\"scheduled-outfits-list\">\n              {scheduledOutfits.length === 0 ? (\n                <div className=\"no-items-message\">\n                  <p>No outfits scheduled yet. Schedule an outfit from the Outfit Planner tab.</p>\n                  <div className=\"setup-instructions\">\n                    <h3>Database Setup Required</h3>\n                    <p>To use the outfit scheduling feature, you need to create the <code>outfit_schedules</code> table in your Supabase database.</p>\n                    <ol>\n                      <li>Go to your Supabase dashboard</li>\n                      <li>Open the SQL Editor</li>\n                      <li>Copy and paste the SQL from the <code>outfit_schedules.sql</code> file</li>\n                      <li>Run the SQL to create the table and set up the necessary policies</li>\n                    </ol>\n                    <p>After setting up the database, refresh this page and try scheduling an outfit again.</p>\n                  </div>\n                </div>\n              ) : (\n                scheduledOutfits.map((schedule) => (\n                  <div key={schedule.id} className=\"scheduled-outfit-card\">\n                    <div className=\"scheduled-outfit-date\">\n                      <h3>{formatDate(schedule.date)}</h3>\n                    </div>\n                    <div className=\"scheduled-outfit-details\">\n                      <h4>{schedule.outfit?.name}</h4>\n                      {schedule.outfit?.occasion && (\n                        <p className=\"outfit-occasion\">{schedule.outfit.occasion}</p>\n                      )}\n                      <div className=\"scheduled-outfit-preview\">\n                        {schedule.outfit?.items && getSortedItems(schedule.outfit.items).map((item) => (\n                          <img\n                            key={item.id}\n                            src={item.image_url}\n                            alt={item.name || item.category}\n                            className=\"scheduled-outfit-item-image\"\n                          />\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"scheduled-outfit-actions\">\n                      <button\n                        onClick={() => handleDeleteSchedule(schedule.id)}\n                        className=\"button button-danger\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Save Outfit Modal */}\n      {showSaveModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2 className=\"section-title\">Save Outfit</h2>\n            <div className=\"form-group\">\n              <label>Outfit Name:</label>\n              <input\n                type=\"text\"\n                value={outfitName}\n                onChange={(e) => setOutfitName(e.target.value)}\n                placeholder=\"Enter a name for your outfit\"\n                className=\"form-input\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Occasion (optional):</label>\n              <input\n                type=\"text\"\n                value={outfitOccasion}\n                onChange={(e) => setOutfitOccasion(e.target.value)}\n                placeholder=\"Enter an occasion\"\n                className=\"form-input\"\n              />\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                onClick={() => {\n                  setShowSaveModal(false);\n                  setOutfitName('');\n                  setOutfitOccasion('');\n                }}\n                className=\"button button-secondary\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSaveOutfit}\n                disabled={!outfitName}\n                className=\"button\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Schedule Outfit Modal */}\n      {showScheduleModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2 className=\"section-title\">Schedule Outfit</h2>\n            <div className=\"form-group\">\n              <label>Select Date:</label>\n              <input\n                type=\"date\"\n                value={scheduleDate}\n                onChange={(e) => setScheduleDate(e.target.value)}\n                className=\"form-input\"\n                min={new Date().toISOString().split('T')[0]}\n              />\n            </div>\n            <div className=\"scheduled-outfit-preview\">\n              <h3>{selectedOutfitForSchedule?.name}</h3>\n              {selectedOutfitForSchedule?.occasion && (\n                <p className=\"outfit-occasion\">{selectedOutfitForSchedule.occasion}</p>\n              )}\n              <div className=\"outfit-preview-grid\">\n                {selectedOutfitForSchedule?.items && getSortedItems(selectedOutfitForSchedule.items).map((item) => (\n                  <div key={item.id} className=\"outfit-preview-item\">\n                    <img\n                      src={item.image_url}\n                      alt={item.name || item.category}\n                      className=\"outfit-preview-image\"\n                    />\n                    <div className=\"outfit-preview-details\">\n                      <h3>{item.name || item.category}</h3>\n                      {item.brand && <p className=\"item-brand\">{item.brand}</p>}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                onClick={() => {\n                  setShowScheduleModal(false);\n                  setSelectedOutfitForSchedule(null);\n                  setScheduleDate('');\n                }}\n                className=\"button button-secondary\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleScheduleOutfit}\n                disabled={!scheduleDate}\n                className=\"button\"\n              >\n                Schedule\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OutfitPlanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}